{"version":3,"sources":["routes/Login.js","modules/profileInfo.js","component/ProfileBox.js","modules/postInfo.js","component/Modal.js","component/LikeComment.js","component/PostContainer.js","component/DaumPost.js","modules/user.js","component/Header.js","routes/Main.js","component/MentionHighlight.js","component/Comment.js","component/SliderSlick.js","component/Grid.js","component/useInput.js","component/EditPostContainer.js","routes/Post.js","routes/Posting.js","routes/Setting.js","routes/Profile.js","component/Router.js","component/Footer.js","component/App.js","modules/index.js","index.js"],"names":["Login","kauthUrl","process","className","src","width","href","id","SET_PROFILE_INFO","initialState","profileObj","isOwner","setProfileInfo","type","ProfileBox","location","date","history","useHistory","dispatch","useDispatch","userObj","useSelector","state","user","onClick","axios","get","then","res","data","push","profileUrl","nickName","icon","faMapMarkerAlt","dong","split","map","it","proTypes","PropTypes","shape","number","string","React","memo","SET_POST_INFO","postObj","setPostInfo","Modal","isOpenModal","setIsOpenModal","children","wrapperRef","useRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","ref","value","LikeComment","onDetailClick","useState","likeCount","setLikeCount","Likes","findIndex","i","User","isLike","setIsLike","likeModal","setLikeModal","onHeartClick","delete","p","post","userId","postId","undefined","faHeart","style","color","faComment","commentCount","PostContainer","Location","createdAt","title","content","substr","filter","index","line","length","Tags","name","DaumPost","setLocationObj","faTimes","onComplete","fullAddress","address","extraAddress","addressType","bname","buildingName","headers","Authorization","documents","si","region_1depth_name","gu","region_2depth_name","region_3depth_name","locationX","x","locationY","y","detail","SET_LOGGED_INFO","SET_SETTING","SET_USER_INFO","locationId","isLoggedin","isSetting","setLoggedInfo","setSetting","setUserInfo","Header","onSubmit","setSearch","search","onClickMyPage","isOpenMoal","onChange","placeholder","display","for","faSearch","data-toggle","faCaretDown","faUserCircle","window","localStorage","clear","replace","faSignOutAlt","Main","postList","setPostList","locationObj","parseFloat","posts","isOpenDaum","setIsOpenDaum","preventDefault","keyword","substring","faSlidersH","prev","faPlus","MentionHighlight","reactStringReplace","match","Comment","commentObj","SliderSlick","imgArr","dots","infinite","speed","slidesToShow","arrows","adaptiveHeight","img","url","Grid","isOpen","setIsOpen","onToggleClick","height","useInputObj","initalValue","setData","handler","useCallback","e","useFileInput","initalValueArr","fileArr","setFileArr","attachment","setAttachment","files","file","attachmentArr","filesLength","reader","FileReader","onload","result","readAsDataURL","useTagInput","tag","setTag","tagArr","setTagArr","indexOf","includes","idx","arr","splice","EditPostContainer","setIsEdit","useBeforeunload","textObj","setTextObj","onClickDelTag","JSON","stringify","patch","tags","error","alert","message","PostImages","class","Post","postInfo","commentArr","setCommentArr","update","setInterval","Comments","clearInterval","comment","setComment","isEdit","rel","faEllipsisV","confirm","goBack","cmt","toString","Posting","attachments","faImages","multiple","formData","FormData","append","console","log","status","Error","required","Setting","setNickName","errorMess","setErrorMess","nickError","setNickError","checkNick","setCheckNick","test","isExisted","Profile","profileInfo","profileImage","setProfileImage","setEditUser","editUser","userprofile","AppRouter","exact","path","Footer","faPhone","App","token","parse","getItem","query","queryString","getKakaoTokenHandler","sendJwtTokenToServer","removeItem","a","grant_type","client_id","redirect_uri","code","Object","keys","k","encodeURIComponent","join","sendKakaoTokenToServer","access_token","replaceState","origin","pathname","hash","setItem","jwt","jwtToken","persistConfig","key","storage","rootReducer","combineReducers","action","persistedReducer","persistReducer","dotenv","config","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d9bf5a4.chunk.js","sourcesContent":["import REACT from 'react';\r\nimport '../styleSheets/login.css';\r\nconst Login = () => {\r\n    const kauthUrl=`https://kauth.kakao.com/oauth/authorize?client_id=${process.env.REACT_APP_KAKAO_REST_KEY}&redirect_uri=https://tave7-dobdob.github.io/DobDob-Web/&response_type=code`\r\n    return (<><div className=\"Container login\">\r\n        <header><img src=\"logo3.png\" width=\"80px\" /></header>\r\n        <div className=\"centerContainer login-view1\">\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-text\">\r\n                    <h1>이웃과 나누는 <br /> 동네이야기</h1>\r\n                    <p>이웃과 서로 돕고 돕는 커뮤니티 <h2>돕돕</h2> 내 근처에 귀를 기울여봐요 .<br />이웃에게 물어보세요 .</p>\r\n                    <a href={kauthUrl}>\r\n                    <img src=\"kakao_login.png\" id=\"kakao-login-btn\" width=\"200px\" /></a>\r\n                </div>\r\n                <div className=\"randing-img\">\r\n                    <img id=\"randing-img1\" src=\"logo2.png\" width=\"40%\" />\r\n                    <img id=\"randing-img2\" src=\"monitor_poster.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"centerContainer login-view2\">\r\n            <div className=\"randing-wrapper \">\r\n                <div className=\"randing-text wrapper1\">\r\n                    <h1>우리동네 이웃들의 이야기를 볼 수 있어요 !</h1>\r\n                    <p>동네 이웃들의 글을 볼 수 있어요.</p>\r\n                    <span>내 주변과 가까운 동네 이웃들의 글들이 모아져 보여집니다.</span>\r\n                    <br />\r\n                    <span>동네 정보도 얻어가고, 이웃들과 같이 밥도 먹으면서 <br/>새로운 동네를 만들어가보세요 !</span>\r\n                </div>\r\n                <div className=\"randing-img\"><img id=\"randing-img\" src=\"Main.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-img\">\r\n                    <img id=\"randing-img\" src=\"main.gif\" width=\"80%\" /></div>\r\n                <div className=\"randing-text wrapper2\">\r\n                    <p>위치 설정으로 다른 동네의 글들도 볼 수 있어요.</p>\r\n                    <span>다른동네의 이야기들도 궁금하다면 원하는 동네를 설정해서 찾아볼 수 있어요 !</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-img\">\r\n                    <div className=\"centerContainer searchBar-wrapper\">\r\n                        <img src=\"search.gif\" width=\"100%\" /></div></div>\r\n                <div className=\"randing-text wrapper2\">\r\n                    <p>검색으로 원하는 내용을 찾아 볼 수 있어요 .</p>\r\n                    <span>태그 또는 제목을 검색하여 찾고자 하는 이야기들을 살펴볼 수 있어요 !</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper randing-block2\">\r\n                <div className=\"randing-text\">\r\n                    <h1>이웃들에게 물어봐요 !</h1>\r\n                    <p>동네의 궁금증이나 사소한 이야기에 대해 <br/>직접 이야기 할 수 있어요.</p>\r\n                    <sppn>직접 원하는 동네에 글을 작성하거나 댓글을 남길 수 있어요 !</sppn>\r\n                </div>\r\n                <div className=\"randing-img\">\r\n                    <img src=\"randing2.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"centerContainer login-view3\">\r\n            <div className=\"row-container randing-wrapper\">\r\n                <div className=\"randing-text\">\r\n                    <p>카카오 로그인으로 간편하게</p>\r\n                    <h1>지금 시작해보세요 !</h1>\r\n                </div>\r\n                <a href={kauthUrl}>\r\n                <img src=\"kakao_login.png\" id=\"kakao-login-btn\" width=\"200px\" /></a>\r\n            </div>\r\n        </div>\r\n    </div></>)\r\n}\r\n\r\nexport default Login;","\r\nconst SET_PROFILE_INFO = 'postInfo/SET_PROFILE_INFO'; // 로그인 정보 설정\r\nconst initialState = {\r\n    profileObj: null,\r\n    isOwner: false,\r\n  };\r\nexport const setProfileInfo = (profileObj, isOwner) => {\r\n    return {\r\n        type: SET_PROFILE_INFO,\r\n        profileObj,\r\n        isOwner\r\n    };\r\n};\r\n\r\nexport default  function profileInfo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PROFILE_INFO:\r\n            return {...state,\r\n                profileObj: action.profileObj,\r\n                isOwner: action.isOwner\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from 'react-router';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileBox = ({ profileObj, location, date }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const userObj = useSelector(state => state.user.userObj);\r\n\r\n    const onProfileClick = () => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${profileObj.id}`).then(res => {\r\n            dispatch(setProfileInfo(res.data.user, profileObj.id == userObj.id));\r\n            history.push(\"/profile\");\r\n        })\r\n    }\r\n    return (<>\r\n        <div className=\"profile-img\" onClick={onProfileClick}><img src={profileObj.profileUrl ? profileObj.profileUrl :\"img_p.png\"} /></div>\r\n        <div className=\"row-container sub-profile-wrapper2\">\r\n            <div className=\"sub-profile-wrapper\">\r\n                <span>{profileObj.nickName}</span>\r\n               {location&&<span id=\"profile-location\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {location.dong}</span>}\r\n            </div>\r\n            {date && <span id=\"date\">{date.split(/[T|.]/, 2).map(it => it + \" \")}</span>}\r\n        </div>\r\n    </>);\r\n}\r\n\r\nProfileBox.proTypes={\r\n    profileObj:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        nickName:PropTypes.string,\r\n        profileUrl:PropTypes.string,\r\n    }),\r\n    location:PropTypes.shape({\r\n        dong: PropTypes.string,\r\n    })\r\n}\r\n\r\nexport default React.memo(ProfileBox);","\r\nconst SET_POST_INFO = 'postInfo/SET_POST_INFO'; // 로그인 정보 설정\r\n//const SET_SETTING = 'postInfo/SET_SETTING'; // validated 값 설정\r\n\r\nconst initialState = {\r\n    postObj: null,\r\n    isOwner: false,\r\n  };\r\nexport const setPostInfo = (postObj, isOwner) => {\r\n    return {\r\n        type: SET_POST_INFO,\r\n        postObj,\r\n        isOwner\r\n    };\r\n};\r\n\r\nexport default  function postInfo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_POST_INFO:\r\n            return {...state,\r\n                postObj: action.postObj,\r\n                isOwner: action.isOwner\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {  useEffect, useRef } from 'react';\r\nconst Modal =({isOpenModal, setIsOpenModal, children})=> {\r\n  const wrapperRef = useRef();\r\n  useEffect(()=>{\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return()=>{\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n  })\r\n  const handleClickOutside=(event)=>{\r\n    if (wrapperRef && !wrapperRef.current.contains(event.target)) {\r\n      setIsOpenModal(false);\r\n    }\r\n    else {\r\n      setIsOpenModal(true);\r\n    }\r\n  }\r\n \r\n    return (<div ref={wrapperRef} value={isOpenModal} className=\"modal\">\r\n      {children}\r\n\r\n    </div>);\r\n  \r\n}\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faComment} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ProfileBox from './ProfileBox';\r\nimport Modal from './Modal';\r\nimport '../styleSheets/post.css'\r\nimport axios from 'axios';\r\nconst LikeComment = ({postObj, userObj, onDetailClick}) => {\r\n\r\n    const [likeCount, setLikeCount]=useState(postObj.likeCount)\r\n    const [isLike, setIsLike] = useState(postObj.Likes.findIndex(i => i.User.id == userObj.id) != -1);\r\n    const [likeModal, setLikeModal] = useState(false)\r\n\r\n    const onHeartClick = () => {\r\n        isLike?\r\n        axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/like/${userObj.id}/${postObj.id}`).then(()=>{\r\n            setLikeCount(p=>p-1);\r\n            setIsLike(false)})\r\n        :\r\n        axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/like\", {userId:userObj.id, postId:postObj.id}).then(()=>{\r\n            setLikeCount(p=>p+1);\r\n            setIsLike(true)})\r\n    }\r\n    const onlikeListClick = () => {\r\n        setLikeModal(true);\r\n    }\r\n\r\n    return (<>\r\n        {onDetailClick==undefined?<div className=\"heart-comment-wrapper\">\r\n            <FontAwesomeIcon id=\"icon\" icon={faHeart} style={{ color: `${isLike ? \"#ff7f50\" : \"#c5c5c5\"}` }} onClick={onHeartClick} />\r\n            <span className=\"bold-span\" id=\"like-list\" onClick={onlikeListClick}>좋아요</span>\r\n            <span>{postObj.likeCount}명 </span>\r\n            {likeModal && <>\r\n                <div className=\"modal-bg\"><span></span></div>\r\n                <Modal isOpenModal={likeModal} setIsOpenModal={setLikeModal} children={<>\r\n                    <div className=\"centerContainer like-list-modal\">\r\n                        <span className=\"label\">좋아요</span>\r\n                        <hr />\r\n                        {postObj.Likes.map(it =>\r\n                            <div className=\"post-profile-wrapper\">\r\n                                <ProfileBox profileObj={it.User} />\r\n                            </div>)}\r\n                    </div>\r\n                </>} /></>}\r\n            <FontAwesomeIcon id=\"icon\" icon={faComment} />\r\n            <span className=\"bold-span\">댓글</span><span>{postObj.commentCount}명</span>\r\n        </div>\r\n        :<div className=\"heart-comment-wrapper\">\r\n            <FontAwesomeIcon id=\"icon\" icon={faHeart} style={{ color: `${isLike ? \"#ff7f50\" : \"#c5c5c5\"}` }} onClick={onHeartClick} /> \r\n            <span>{likeCount}</span>\r\n            <FontAwesomeIcon id=\"icon\" icon={faComment} onClick={onDetailClick} />  \r\n            <span>{postObj.commentCount}</span>\r\n        </div>}\r\n    </>)\r\n}\r\nexport default LikeComment;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from 'react-router';\r\nimport ProfileBox from './ProfileBox';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport LikeComment from './LikeComment';\r\nimport '../styleSheets/postContainer.css';\r\nconst PostContainer = ({ userObj, postObj }) => {\r\n    const history = useHistory();\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const onDetailClick = () => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`)\r\n        .then(res=>{\r\n            dispatch(setPostInfo(res.data.post, userObj.id==postObj.User.id))\r\n            history.push(\"/post\");\r\n            })\r\n        \r\n    }\r\n\r\n    return (<div className=\"post-container\">\r\n        <div className=\"post-profile-wrapper\">\r\n            <ProfileBox profileObj={postObj.User} location={postObj.Location} date={postObj.createdAt}/>\r\n        </div>\r\n        <hr />\r\n        <div className=\"content-wrapper\">\r\n            <h2 onClick={onDetailClick}>{postObj.title}</h2>\r\n            {<div className=\"sub-wrapper\" onClick={onDetailClick}>\r\n                <div>\r\n                    {postObj.content.substr(0, 30).split(\"\\n\").filter((it, index) => index < 2).map((line) => <span><br />{line}</span>)}\r\n                    {(postObj.content.length > 30||postObj.content.split('\\n').length >3) && <button id=\"more-btn\"> ... 더 보기</button>}\r\n                    \r\n                </div>\r\n            </div>}\r\n        </div>\r\n        <LikeComment postObj={postObj} userObj={userObj} onDetailClick={onDetailClick}/>\r\n\r\n        <hr />\r\n        <div className=\"tag-wrapper\">{postObj.Tags&&postObj.Tags.map(it => <span>#{it.name} </span>)}</div>\r\n    </div>);\r\n}\r\n\r\nPostContainer.propTypes = {\r\n    userObj: PropTypes.shape({\r\n        id:PropTypes.number.isRequired\r\n\r\n    }),\r\n    postObj:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        title:PropTypes.string,\r\n        content:PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        likeCount:PropTypes.number,\r\n        commentCount:PropTypes.number,\r\n        Location:PropTypes.object,\r\n        User:PropTypes.object\r\n    })\r\n}\r\nexport default PostContainer;","import REACT, { useState } from 'react';\r\nimport DaumPostCode from 'react-daum-postcode';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from 'axios';\r\nconst DaumPost = ({ setLocationObj , setIsOpenModal}) => {\r\n\r\n    const onPostClick = () => {\r\n        setIsOpenModal(false);\r\n    }\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsOpenModal(false);\r\n        axios.get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\r\n            headers: { Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_REST_KEY}` },\r\n        })\r\n            .then(res => {\r\n                const location = res.data.documents[0];\r\n                setLocationObj({\r\n                    si: location.address.region_1depth_name,\r\n                    gu: location.address.region_2depth_name,\r\n                    dong: location.address.region_3depth_name,\r\n                    locationX: location.address.x,\r\n                    locationY: location.address.y,\r\n                    detail: fullAddress\r\n                })\r\n            })\r\n    }\r\n    return (<>\r\n            <div className=\"address-modal\">\r\n                <div className=\"address-modal-bar\">\r\n                    <span>주소검색</span>\r\n                    <button onClick={onPostClick}><FontAwesomeIcon icon={faTimes} /></button>\r\n                </div>\r\n                <div><DaumPostCode onComplete={handleComplete} className=\"post-code\" /></div>\r\n            </div>\r\n        </>);\r\n}\r\nexport default DaumPost;","\r\nconst SET_LOGGED_INFO = 'user/SET_LOGGED_INFO'; // 로그인 정보 설정\r\nconst SET_SETTING = 'user/SET_SETTING'; // validated 값 설정\r\nconst SET_USER_INFO = 'user/SET_USER_INFO'; // 로그아웃\r\n\r\n\r\n//export const logout = createAction(LOGOUT, AuthAPI.logout);\r\n//export const checkStatus = createAction(CHECK_STATUS, AuthAPI.checkStatus);\r\nconst initialState = {\r\n    userObj: {\r\n        userId: 1,\r\n        //profileUrl:\"test_profile.jpg\",\r\n        nickName: \"김지현\",\r\n        locationId: { dong: \"상도동\", fullAddress: \"서울 동작구 성대로21길 36 (상도동, 우주빌B)\" }\r\n      },\r\n    isLoggedin: false,\r\n    isSetting:false,\r\n  };\r\nexport const setLoggedInfo = (userObj, isLoggedin) => {\r\n    return {\r\n        type: SET_LOGGED_INFO,\r\n        userObj,\r\n        isLoggedin\r\n    };\r\n};\r\n\r\nexport const setSetting = isSetting => {\r\n    return {\r\n        type: SET_SETTING,\r\n        isSetting\r\n    };\r\n};\r\nexport const setUserInfo= userObj => {\r\n    return {\r\n        type: SET_USER_INFO,\r\n        userObj\r\n    };\r\n};\r\nexport default  function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOGGED_INFO:\r\n            return {...state,\r\n                userObj: action.userObj,\r\n                isLoggedin: action.isLoggedin\r\n                };\r\n        case SET_SETTING:\r\n            return { ...state,isSetting: action.isSetting  };\r\n        case SET_USER_INFO:\r\n            return { ...state,userObj: action.userObj  };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown, faUserCircle, faSignOutAlt, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from '../component/Modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport { setLoggedInfo } from '../modules/user';\r\nimport axios from 'axios';\r\nimport '../styleSheets/header.css';\r\nconst Header = ({ onSubmit, setSearch, search, userObj }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setSearch(value);\r\n    }\r\n    const onClickshap = () => {\r\n        setSearch(\"#\");\r\n    }\r\n\r\n    const onClickMyPage = () => {\r\n        dispatch(setProfileInfo(userObj, true));\r\n        history.push(\"/profile\");\r\n    }\r\n\r\n    const onClickLogo = () => {\r\n        search!=undefined && setSearch(\"\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(setLoggedInfo(null, false));\r\n        axios.get(`https://kauth.kakao.com/oauth/logout?client_id=${process.env.REACT_APP_KAKAO_REST_KEY}&logout_redirect_uri=https://tave7-dobdob.github.io/DobDob-Web/logout`).then(() => {\r\n            window.localStorage.clear();\r\n            history.push(\"/\");\r\n            window.location.replace(\"/\")\r\n        }\r\n        )\r\n    }\r\n    const [isOpenMoal, setIsOpenModal] = useState(false);\r\n    const onModalClick = () => {\r\n        setIsOpenModal(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <header><img src=\"logo2.png\" width=\"60px\" onClick={onClickLogo} />\r\n            {search!=undefined && <form className=\"row-container\" onSubmit={onSubmit}>\r\n                <input type=\"text\" onChange={onChange} placeholder=\"제목 및 태그를 검색해보세요 !\" value={search} />\r\n                <input type=\"submit\" value=\"검색\" id=\"search-btn\" style={{ display: \"none\" }} />\r\n                <span id=\"tag-char-btn\" onClick={onClickshap}>#</span>\r\n                <label id=\"search-btn-label\" for=\"search-btn\"><FontAwesomeIcon icon={faSearch} /></label>\r\n\r\n            </form>}\r\n            {userObj && <div className=\"profile-wrapper\">\r\n                <div onClick={onClickMyPage} className=\"profile-img\" data-toggle=\"tooltip\" title=\"마이 페이지\"><img src={userObj.profileUrl ? userObj.profileUrl : \"img_p.png\"} /></div>\r\n                <span>{userObj.nickName}</span>\r\n                <Modal isOpenMoal={isOpenMoal} setIsOpenModal={setIsOpenModal} children={<>\r\n                    <button onClick={onModalClick} id=\"menu-btn\"><FontAwesomeIcon icon={faCaretDown} /></button>\r\n                    {isOpenMoal && <div className=\"profile-modal\">\r\n                        <button onClick={onClickMyPage}><FontAwesomeIcon icon={faUserCircle} id=\"icon\" /> 프로필 보기</button>\r\n                        <button id=\"logout\" onClick={onClickLogout}><FontAwesomeIcon icon={faSignOutAlt} id=\"icon\" /> 로그아웃</button>\r\n                    </div>}\r\n                </>}>\r\n                </Modal>\r\n            </div>}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport PostContainer from '../component/PostContainer';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faPlus, faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport Modal from '../component/Modal';\r\nimport { useSelector } from 'react-redux';\r\nimport '../styleSheets/main.css';\r\nimport axios from 'axios';\r\nimport Header from '../component/Header';\r\nconst Main = () => {\r\n    const history=useHistory();\r\n\r\n    const userObj = useSelector(state => state.user.userObj);\r\n    const [postList, setPostList] = useState([]);\r\n    const [locationObj, setLocationObj] = useState(userObj.Location);\r\n    useEffect(() => {\r\n        axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list\", {\r\n            locationX: parseFloat(locationObj.locationX),\r\n            locationY: parseFloat(locationObj.locationY)\r\n        }).then(res => {\r\n            setPostList(res.data.posts)\r\n\r\n        });\r\n    },[locationObj]); \r\n    \r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        search[0] == \"#\" ?\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list/tag`, {\r\n                keyword:search.substring(1),\r\n                locationX: parseFloat(locationObj.locationX),\r\n                locationY: parseFloat(locationObj.locationY)\r\n            }).then(res => setPostList(res.data.posts))//태그 검색\r\n            :\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list/title`,{\r\n                keyword:search,\r\n                locationX: parseFloat(locationObj.locationX),\r\n                locationY: parseFloat(locationObj.locationY)\r\n            }).then(res => setPostList(res.data.posts)) //제목 검색\r\n    }\r\n    \r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n    const onClickPosting=()=>{\r\n        history.push(\"/posting\")\r\n    }\r\n    return (<div className=\"Container main\">\r\n        <Header onSubmit={onSubmit} search={search} setSearch={setSearch} userObj={userObj}/>\r\n        <div className=\"centerContainer article-wrapper\">\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n            <div className=\"location-wrapper\">\r\n                <span className=\"label\"><FontAwesomeIcon icon={faMapMarkerAlt} /> 나의 동네<FontAwesomeIcon id=\"icon\" icon={faSlidersH} onClick={onClickLocation} data-toggle=\"tooltip\" title=\"동네 재설정\" /></span>\r\n                <span>{locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n            </div>\r\n\r\n            <div className=\"centerContainer post-wrapper\">\r\n                {!postList||postList.length == 0 ? <>\r\n                    <div className=\"centerContainer nothing-post-wrapper\"><p>해당 동네 게시물이 아직 없습니다.<br />먼저 글을 작성해보세요 !</p>\r\n                        <img src=\"nothingPost.png\" width=\"60%\" />\r\n                    </div>\r\n                </> : postList.map(post => <PostContainer postObj={post} userObj={userObj} />)}\r\n            </div>\r\n            <FontAwesomeIcon id=\"plus-icon\" icon={faPlus} data-toggle=\"tooltip\" title=\"글쓰기\" onClick={onClickPosting} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\n\r\nconst MentionHighlight = ({ content }) => {\r\n\r\n    return (\r\n        <div className=\"comment-highlight\">\r\n            {content.split('\\n').map(line =>\r\n                <div>\r\n                    {reactStringReplace(line, /(@\\S+)/g, (match, i) => {\r\n                        return (\r\n                            <span style={{ color: '#1b73d8' }}>{match}</span>\r\n                        )\r\n                    })}\r\n                    <br />\r\n                </div>)}\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo( MentionHighlight);","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MentionHighlight from './MentionHighlight';\r\nimport ProfileBox from './ProfileBox';\r\nconst Comment = ({ commentObj, isOwner }) => {\r\n\r\n    const onDelClick = () => {\r\n        axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/comment/${commentObj.id}`)\r\n    }\r\n    return (<div className=\"comment\">\r\n        <div className=\"post-profile-wrapper\">\r\n            <ProfileBox profileObj={commentObj.User} location={commentObj.User.Location} date={commentObj.createdAt}/>\r\n            {isOwner && <button id=\"del-btn\" onClick={onDelClick}>삭제</button>}\r\n        </div>\r\n        <div>\r\n            <MentionHighlight content={commentObj.content} />\r\n        </div>\r\n    </div>)\r\n}\r\nexport default React.memo(Comment);","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nconst SliderSlick =({imgArr})=> {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      arrows:true,adaptiveHeight:true\r\n    }\r\n    return (\r\n      <div className=\"slider\">\r\n        <Slider {...settings}>\r\n          {imgArr.map(img=> <div className=\"img-wrapper\">\r\n            <img src={img.url}/></div>)}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default SliderSlick;","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SliderSlick from './SliderSlick';\r\nconst Grid = ({ imgArr }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onToggleClick = () => {\r\n    setIsOpen(prev => !prev);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"grid-wrapper\" onClick={onToggleClick}>\r\n        {imgArr.length == 1 &&\r\n          <div className=\"single-grid-container\">\r\n            <img width=\"100%\" src={imgArr[0].url} />\r\n          </div>\r\n        }\r\n        {imgArr.length == 2 || imgArr.length == 4 &&\r\n          <div className=\"grid-container\">\r\n            {imgArr.map(it => <div><img height=\"100%\" src={it.url} /></div>)}\r\n          </div>\r\n        }\r\n        {imgArr.length == 3 &&\r\n          <div className=\"grid-container\">\r\n            {imgArr.map((it, index) => {\r\n              if (index == 0) return <div className=\"item1\"><img height=\"100%\" src={it.url} /></div>\r\n              else return <div><img height=\"100%\" src={it.url} /></div>\r\n            })}\r\n          </div>}\r\n        {imgArr.length==5&&\r\n        <div className=\"grid-container\">\r\n          {imgArr.map((it, index) => {\r\n            if (index == 3) return <div>\r\n              <span>+ 1</span>\r\n              <img className=\"plus-img\" height=\"100%\" src={it.url} />\r\n            </div>\r\n            else if (index == 4) return\r\n            else return <div><img height=\"100%\" src={it.url} /></div>\r\n          })}\r\n        </div>}\r\n\r\n      </div>\r\n      {isOpen &&\r\n        <div className=\"wrapper\">\r\n          <div className=\"centerContainer slider-wrapper\">\r\n            <button id=\"close-btn\" onClick={onToggleClick}><FontAwesomeIcon icon={faTimes} /></button>\r\n            <div className=\"centerContainer slider-wrapper2\"><SliderSlick imgArr={imgArr} /></div>\r\n          </div>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\nexport default Grid;","import React, {  useState, useCallback } from 'react';\r\n\r\nexport function useInput(initalValue = null) {\r\n\r\n  const [data, setData] = useState(initalValue);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n      setData(value);\r\n    },\r\n    [data]\r\n  );\r\n  return [data, handler];\r\n};\r\n\r\nexport function useInputObj(initalValue = null) {\r\n\r\n  const [data, setData] = useState(initalValue);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n\r\n      setData({\r\n        ...data,\r\n        [name]: value\r\n      });\r\n    },\r\n    [data]\r\n  );\r\n  return [data, handler];\r\n};\r\nexport function useFileInput(initalValue = null,initalValueArr=null){\r\n\r\n  const [fileArr, setFileArr] = useState(initalValue);\r\n  const [attachment, setAttachment] = useState(initalValueArr);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { target: { files } } = e;\r\n      setFileArr(files)\r\n      const attachmentArr = [];\r\n      let filesLength = files.length > 5 ? 5 : files.length;\r\n      let file;\r\n\r\n      for (let i = 0; i < filesLength; i++) {\r\n          file = files[i];\r\n          let reader = new FileReader();\r\n          reader.onload = () => {\r\n              attachmentArr[i] = reader.result;\r\n              setAttachment([...attachmentArr]);\r\n          };\r\n          reader.readAsDataURL(file);\r\n      }},\r\n    [fileArr, attachment]\r\n  );\r\n\r\n  return [fileArr, handler, attachment, handler];\r\n}\r\nexport function useTagInput(initalValue = null, initalValueArr = null) {\r\n  const [tag, setTag] = useState(initalValue);\r\n  const [tagArr, setTagArr] = useState(initalValueArr);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n      setTag(value);\r\n      if (value == \" \") { setTag(value.replace(' ', '')); }\r\n      else if ((value.indexOf(\" \")) != -1) {\r\n        setTag(\"\");\r\n        if (!tagArr.includes(value)) {\r\n          setTagArr(tagArr => ([...tagArr, value.replace(' ', '')]));\r\n        }\r\n      }\r\n\r\n    },\r\n    [tag, tagArr]\r\n  );\r\n  const onClick = (idx) => {\r\n    //태그 삭제 기능\r\n    let arr = tagArr;\r\n    arr.splice(idx, 1)\r\n    setTagArr([...arr])\r\n  }\r\n  return [tag, handler, tagArr, handler, onClick];\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport DaumPost from './DaumPost';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport Grid from './Grid';\r\nimport { useInputObj, useTagInput } from './useInput';\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from './Modal';\r\nconst EditPostContainer = ({ postObj, location, setIsEdit }) => {\r\n    const dispatch = useDispatch();\r\n    useBeforeunload((event) => event.preventDefault());\r\n\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const [locationObj, setLocationObj] = useState(location);//for 주소검색 component\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(true);\r\n    }\r\n\r\n    const [textObj, setTextObj] = useInputObj({\r\n        title: postObj.title,\r\n        content: postObj.content\r\n    })\r\n    const [tag, setTag, tagArr, _, onClickDelTag] = useTagInput(\"\", postObj.Tags.map(it => it.name));\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            JSON.stringify(location)!==JSON.stringify(locationObj)?\r\n            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`, { ...textObj, tags: JSON.stringify(tagArr), location: JSON.stringify(locationObj) }).then(() => {\r\n                dispatch(setPostInfo({ ...postObj, ...textObj, Tags: tagArr, Location: locationObj }, true));\r\n                setIsEdit(false);\r\n            })\r\n            :\r\n            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`, { ...textObj, tags: JSON.stringify(tagArr) }).then(() => {\r\n                dispatch(setPostInfo({ ...postObj, ...textObj, Tags: tagArr, Location: locationObj }, true));\r\n                setIsEdit(false);\r\n            })\r\n        } catch (error) {\r\n            window.alert(error.message)\r\n        }\r\n    }\r\n    return (<>\r\n\r\n        <div className=\"centerContainer main-content\">\r\n\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum} />} /></div>}\r\n            <div className=\"post-container edit-post-container\">\r\n                <div className=\"menu-wrapper\">\r\n                    <span className=\"location\" data-toggle=\"tooltip\" title=\"위치 재설정\" onClick={onClickLocation}><FontAwesomeIcon icon={faMapMarkerAlt} id=\"marker\" color=\"#ffc600\" /> {locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"content-wrapper\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요.\" value={textObj.title} onChange={setTextObj} />\r\n                        <hr />\r\n                        <TextareaAutosize name=\"content\" placeholder=\"내용을 입력하세요.\" id=\"text-box\" value={textObj.content} onChange={setTextObj} />\r\n                        <input type=\"submit\" id=\"submit-btn\" value=\"완료\" />\r\n                    </form>\r\n                </div>\r\n                {postObj.PostImages.length > 0 && <Grid imgArr={postObj.PostImages} />}\r\n\r\n                <div className=\"tag-wrapper posting-tag-wrapper\">\r\n                    <span>#</span>\r\n                    <input type=\"text\" name=\"tag\" value={tag} onChange={setTag} placeholder=\"태그를 입력해보세요 !\" />\r\n                    {!!tagArr && tagArr.map((tag, index) => <div class=\"centerContainer tag-box\"><span>{tag}<span id=\"del-btn\" onClick={() => onClickDelTag(index)}>X</span></span>\r\n                    </div>)}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nEditPostContainer.propTypes = {\r\n    postObj: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        title: PropTypes.string,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        likeCount: PropTypes.number,\r\n        commentCount: PropTypes.number,\r\n        Location: PropTypes.object,\r\n        User: PropTypes.object,\r\n        PostImages: PropTypes.array\r\n    }),\r\n    location: PropTypes.shape({\r\n        dong: PropTypes.string,\r\n    }),\r\n    setIsEdit: PropTypes.node\r\n}\r\nexport default EditPostContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {  faSearch, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Comment from '../component/Comment';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport MentionHighlight from '../component/MentionHighlight';\r\nimport EditPostContainer from '../component/EditPostContainer';\r\nimport ProfileBox from '../component/ProfileBox';\r\nimport Modal from '../component/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../styleSheets/post.css'\r\nimport axios from 'axios';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport Grid from '../component/Grid'\r\nimport Header from '../component/Header';\r\nimport LikeComment from '../component/LikeComment';\r\nconst Post = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { postObj, isOwner } = useSelector(state => ({\r\n        postObj: state.postInfo.postObj,\r\n        isOwner: state.postInfo.isOwner\r\n    }));\r\n    const userObj = useSelector(state => state.user.userObj);\r\n    const [commentArr, setCommentArr] = useState([]);\r\n    useEffect(() => {\r\n        const update = setInterval(() => {\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`).then(res => {\r\n                dispatch(setPostInfo(res.data.post, isOwner))\r\n                setCommentArr(res.data.post.Comments)\r\n            })\r\n        }, 1000)\r\n        return () => {\r\n            setIsEdit(false);\r\n            clearInterval(update);\r\n\r\n        }\r\n    }, [])\r\n    const [comment, setComment] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setComment(value);\r\n    }\r\n    const onCommentSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const cmt = {\r\n                content: comment,\r\n                userId: userObj.id,\r\n                postId: postObj.id\r\n            }\r\n            //서버 전송\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/comment/`, { ...cmt })\r\n            setComment(\"\");\r\n        } catch (error) {\r\n            window.alert(error.toString())\r\n        }\r\n    }\r\n    \r\n    const onDeleteClick = () => {\r\n        if (window.confirm(\"글을 삭제하시겠습니까?\") == true) {\r\n            axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`).then(history.goBack(1))\r\n        }\r\n    }\r\n    const onModalClick = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const onEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const [isOpenMoal, setIsOpenModal] = useState(false);\r\n\r\n    return (<>\r\n        <head><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" /></head>\r\n        <div className=\"Container post\">\r\n            <Header userObj={userObj}/>\r\n            {!isEdit ? <>\r\n                <div className=\"main-content\">\r\n                    <div className=\"post-container\">\r\n                        <div className=\"post-profile-wrapper\">\r\n                            <ProfileBox profileObj={postObj.User} location={postObj.Location} />\r\n                            <div className=\"modal-container\">\r\n                                <Modal isOpenModal={isOpenMoal} setIsOpenModal={setIsOpenModal} children={<>\r\n                                    {isOwner && !isOpenMoal && <button onClick={onModalClick} id=\"menu-btn\"><FontAwesomeIcon icon={faEllipsisV} /></button>}\r\n                                    {isOpenMoal && <div className=\"edit-del-wrapper\">\r\n                                        <button onClick={onEditClick}>수정</button>\r\n                                        <button onClick={onDeleteClick}>삭제</button></div>}\r\n                                </>}/>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"content-wrapper\">\r\n                            <h2>{postObj.title}</h2>\r\n                            <span id=\"date\">{postObj.createdAt.split(/[T|.]/, 2).map(it => it + \" \")}</span>\r\n                            <div className=\"sub-wrapper\">\r\n                                <div>\r\n                                    {postObj.content.split(\"\\n\").map((line) => <span><br />{line}</span>)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {postObj.PostImages.length > 0 && <Grid imgArr={postObj.PostImages} />}\r\n                        <hr />\r\n                        <div className=\"tag-wrapper\">{postObj.Tags && postObj.Tags.map(it => <span>#{it.name} </span>)}</div>\r\n                    </div>\r\n                    <div className=\"comment-container\">\r\n                        <LikeComment postObj={postObj} userObj={userObj}/>\r\n                        <form onSubmit={onCommentSubmit}>\r\n                            <TextareaAutosize id=\"comment-field\" type=\"text\" placeholder=\"댓글을 입력해주세요. \" value={comment} onChange={onChange} />\r\n                            <MentionHighlight content={comment} onChange={onChange} />\r\n                            <input type=\"submit\" value=\"&#xf054;\" />\r\n                        </form>\r\n\r\n                        <div className=\"comment-scroll-wrapper\">\r\n                            {commentArr.length == 0 ?\r\n                                <div className=\"centerContainer nothing-wrapper\">\r\n                                    <h5>아직 댓글이 없습니다 <FontAwesomeIcon icon={faSearch} /></h5>\r\n                                </div> : commentArr.map(comment => <Comment commentObj={comment} isOwner={comment.User.id == userObj.id} />)}\r\n                        </div>\r\n                    </div>\r\n                </div></> : <EditPostContainer postObj={postObj} location={postObj.Location} setIsEdit={setIsEdit} />}\r\n        </div>\r\n\r\n\r\n    </>)\r\n}\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faImages } from \"@fortawesome/free-regular-svg-icons\";\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport DaumPost from '../component/DaumPost';\r\nimport axios from 'axios';\r\nimport '../styleSheets/posting.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { useFileInput, useInputObj, useTagInput } from '../component/useInput';\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport Modal from '../component/Modal';\r\nimport Header from '../component/Header';\r\nconst Posting = () => {\r\n    const history = useHistory();\r\n    useBeforeunload((event) => event.preventDefault());\r\n\r\n    const userObj=useSelector(state=>state.user.userObj);\r\n    const [locationObj, setLocationObj] = useState(userObj.Location);\r\n\r\n    const [fileArr, setFileArr, attachments, _] = useFileInput([],null);\r\n    const [tag, setTag, tagArr, __, onClickDelTag] = useTagInput(\"\",[]);\r\n    const [textObj, setTextObj] = useInputObj({\r\n        title: \"\",\r\n        content: \"\"\r\n    })\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            for (let i = 0; i < fileArr.length; i++) {\r\n                formData.append('postImage', fileArr[i])\r\n            }\r\n            console.log(JSON.stringify(locationObj));\r\n            formData.append('userId', userObj.id)\r\n            formData.append('location', JSON.stringify(locationObj))\r\n            formData.append('title', textObj.title)\r\n            formData.append('content', textObj.content)\r\n            formData.append('tags', JSON.stringify(tagArr))\r\n            \r\n            axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/upload\", formData).then(res=>{ \r\n                if(res.status==201)history.push(\"/\")\r\n                else{\r\n                    throw new Error(\"Posting 에러\")\r\n                }\r\n            })  \r\n        }\r\n        catch(error){\r\n            window.alert(error.message);\r\n        }\r\n    }\r\n    \r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(true);\r\n    }\r\n    return (<>\r\n        <div className=\"Container posting\">\r\n            <Header/>\r\n            <div className=\"centerContainer main-content\">\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n                <div className=\"centerContainer posting-container\">\r\n                    <div className=\"menu-wrapper\">\r\n                        <span className=\"location\" data-toggle=\"tooltip\" title=\"위치 재설정\" onClick={onClickLocation}><FontAwesomeIcon icon={faMapMarkerAlt} id=\"marker\" color=\"#ffc600\" /> {locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n                        <label for=\"photo-upload\" data-toggle=\"tooltip\" title=\"사진 첨부\"><FontAwesomeIcon icon={faImages} /> <span>사진(최대 5장)</span></label>\r\n                        <input multiple=\"multiple\" type=\"file\" onChange={setFileArr} id=\"photo-upload\" style={{ display: \"none\" }} />\r\n                    </div>\r\n                    <div className=\"posting-wrapper\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요.\" required value={textObj.title} onChange={setTextObj} />\r\n                            <hr />\r\n                            {attachments != null && <>\r\n                                <span id=\"img-count\">{attachments.length}/5</span>\r\n                                <div className=\"attachment-wrapper\">\r\n                                    {attachments.map(img => <img src={img} width=\"100px\" />)}\r\n                                </div>\r\n                                <hr /></>}\r\n                            <TextareaAutosize name=\"content\" placeholder=\"내용을 입력하세요.\" id=\"text-box\" required value={textObj.content} onChange={setTextObj} />\r\n                            <input type=\"submit\" id=\"submit-btn\" value=\"완료\" />\r\n                        </form>\r\n                        <div className=\"tag-wrapper posting-tag-wrapper\">\r\n                            <span>#</span>\r\n                            <input type=\"text\" name=\"tag\" value={tag} onChange={setTag} placeholder=\"태그를 입력해보세요 !\" />\r\n                            {!!tagArr&&tagArr.map((tag, index) => <div class=\"centerContainer tag-box\"><span>{tag}<span id=\"del-btn\" onClick={() => onClickDelTag(index)}>X</span></span>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>)\r\n}\r\nexport default Posting;\r\n","import REACT, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport { useDispatch } from 'react-redux';\r\nimport user, { setSetting, setUserInfo } from '../modules/user';\r\nimport '../styleSheets/setting.css';\r\nimport axios from 'axios';\r\nimport Modal from '../component/Modal';\r\nconst Setting = ({ userObj }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [nickName, setNickName] = useState(\"\");\r\n    const [errorMess, setErrorMess] = useState(\"\");\r\n    const [nickError, setNickError] = useState(\"\");\r\n    const [checkNick, setCheckNick] = useState(false);\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const [locationObj, setLocationObj] = useState(null);\r\n    useEffect(() => {\r\n        locationObj != null && setErrorMess(\"\");\r\n    }, [locationObj])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (!checkNick) throw new Error('중복확인을 해주세요.');\r\n            if (!locationObj) throw new Error('동네를 설정해주세요.');\r\n            //서버 setting 정보 post \r\n            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${userObj.id}`, { nickName: nickName, location: JSON.stringify(locationObj) }).then(() => {\r\n                dispatch(setUserInfo({ ...userObj, nickName: nickName, Location: locationObj }))\r\n                dispatch(setSetting(true));\r\n                history.push(\"/\");\r\n            })\r\n        } catch (error) {\r\n            if (!checkNick) setNickError(error.message);\r\n            else setErrorMess(error.message);\r\n        }\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNickName(value);\r\n    }\r\n    const onCheck = () => {\r\n        setErrorMess(\"\");\r\n        let valNick = /^[가-힣a-z0-9]{2,20}$/g;\r\n        if (!valNick.test(nickName)) {\r\n            setCheckNick(false);\r\n            setNickError('- 2자 이상 20자 이하의 영문 소문자/한글(숫자혼합 가능)\\n- 공백 및 특수문자 불가')\r\n        }\r\n        else {\r\n            //DB중복확인\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/nickname/${nickName}`).then(res => {\r\n                setCheckNick(!res.data.isExisted)\r\n                !res.data.isExisted ?\r\n                    setNickError(\"사용가능한 닉네임입니다.\")\r\n                    :\r\n                    setNickError(\"이미 사용중인 닉네임입니다.\")\r\n            });\r\n        }\r\n    }\r\n    const onPostClick = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"Container setting\">\r\n            <header><img src=\"logo2.png\" width=\"80px\" /></header>\r\n            <div className=\"setting-wrapper\">\r\n                <div className=\"text-wrapper\">\r\n                    <h1>돕돕에서 사용할 <br /> 닉네임과 내 동네를 설정하여 <br />지금 바로 이웃들을 만나보세요 !</h1>\r\n                    <p>닉네임과 내 동네는 추후에도 변경이 가능합니다.</p>\r\n                    <img src=\"setting.png\" width=\"100%\" />\r\n                </div>\r\n                <div className=\"centerContainer form-wrapper-wrapper\">\r\n                    <div className=\"centerContainer form-wrapper\">\r\n                        <form onSubmit={onSubmit} className=\"centerContainer\">\r\n                            <div className=\"sub-wrapper\">\r\n                                <span>닉네임</span>\r\n                                <div className=\"nickname-wrapper\">\r\n                                    <input type=\"text\" required value={nickName} onChange={onChange} placeholder=\"최소 2자 이상\" />\r\n                                    <span onClick={onCheck} id=\"check-btn\">중복확인</span>\r\n                                </div>\r\n                                {checkNick ? <span id=\"nick-error\" style={{ color: '#00aa7d' }}>{nickError}</span> :\r\n                                    <span id=\"nick-error\">{nickError.split(\"\\n\").map(it => <>{it}<br /></>)}</span>}\r\n                            </div>\r\n                            <div className=\"sub-wrapper\">\r\n                                <span>내 동네 설정 </span>\r\n                                {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n\r\n                                <div className=\"address-detail\">\r\n                                    {locationObj && <span id=\"dong\"> <><FontAwesomeIcon icon={faMapMarkerAlt} /> {locationObj.dong}</></span>}\r\n                                    <span onClick={onPostClick} id=\"address-search-btn\">{locationObj ? \"주소 재검색\" : \"주소 검색\"}</span>\r\n                                </div>\r\n                                <span id=\"address\">{locationObj ? locationObj.detail : \"동네를 설정해주세요.\"}</span>\r\n\r\n                                <span id=\"error\">{errorMess}</span>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"돕돕 시작하기\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div></>)\r\n}\r\n\r\nexport default Setting;","import REACT, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUserInfo } from '../modules/user';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport '../styleSheets/profile.css'\r\nimport PostContainer from '../component/PostContainer';\r\nimport axios from 'axios';\r\nimport { useFileInput } from '../component/useInput';\r\nimport Modal from '../component/Modal';\r\nimport Header from '../component/Header';\r\nconst Profile = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, isOwner } = useSelector(state => ({\r\n        user: state.profileInfo.profileObj,\r\n        isOwner: state.profileInfo.isOwner\r\n    }))\r\n    const [postList, setPostList] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`).then(res => {\r\n            setPostList(res.data.posts)\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const onEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const [checkNick, setCheckNick] = useState(false);\r\n    const [nickError, setNickError] = useState(\"\");\r\n    const onCheck = () => {\r\n        let valNick = /^[가-힣a-z0-9]{2,20}$/g;\r\n        if (!valNick.test(editUser.nickName)) {\r\n            setCheckNick(false);\r\n            setNickError('- 2자 이상 20자 이하의 영문 소문자/한글(숫자혼합 가능)\\n- 공백 및 특수문자 불가')\r\n        }\r\n        else if (user.nickName == editUser.nickName) {\r\n            setCheckNick(true);\r\n            setNickError(\"사용가능한 닉네임입니다.\");\r\n        }\r\n        else {\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/nickname/${editUser.nickName}`).then(res => {\r\n                setCheckNick(!res.data.isExisted)\r\n                !res.data.isExisted ?\r\n                    setNickError(\"사용가능한 닉네임입니다.\")\r\n                    :\r\n                    setNickError(\"이미 사용중인 닉네임입니다.\")\r\n            });\r\n        }\r\n    }\r\n\r\n    const [locationObj, setLocationObj] = useState(user.Location);\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n\r\n    const [profileImage, setProfileImage, profileUrl, _] = useFileInput(null, user.profileUrl);\r\n    useEffect(() => {\r\n        setEditUser(editUser => ({ ...editUser, Location: locationObj, profileUrl: profileUrl }));\r\n    }, [locationObj, profileUrl])\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n\r\n\r\n    const [editUser, setEditUser] = useState(user);\r\n    const onChange = (event) => {\r\n        const { target: { value, name } } = event;\r\n        setEditUser(editUser => ({ ...editUser, [name]: value }))\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (JSON.stringify(user) === JSON.stringify(editUser)) {\r\n                setIsEdit(false);\r\n            }\r\n            else {\r\n                if (user.nickName != editUser.nickName && !checkNick) throw new Error('중복확인을 해주세요.');\r\n\r\n                const userprofile = { nickName: editUser.nickName, location: JSON.stringify(locationObj) }\r\n                if (profileImage) {\r\n                    const formData = new FormData();\r\n                    formData.append('profileImage', profileImage[0])\r\n                    axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/profile/${user.id}`, formData).then(res => {\r\n                        res.status == 200 &&\r\n                            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}`, userprofile).then(res => {\r\n                                axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`).then(res => {\r\n                                    setPostList(res.data.posts)\r\n                                });\r\n                            })\r\n                    })\r\n                }\r\n                else {\r\n                    axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}`, userprofile).then(res => {\r\n                        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`).then(res => {\r\n                            setPostList(res.data.posts)\r\n                        });\r\n                    })\r\n                }\r\n                dispatch(setUserInfo({ ...editUser, profileUrl: profileUrl }));\r\n                dispatch(setProfileInfo({ ...editUser, profileUrl: profileUrl }, true));\r\n                setIsEdit(false);\r\n                setIsOpenDaum(false);\r\n                setNickError(\"\");\r\n            }\r\n        } catch (error) {\r\n            if (!checkNick) setNickError(error.message);\r\n        }\r\n    }\r\n\r\n    return (<div className=\"Container profile\">\r\n        <Header />\r\n        <div className=\"centerContainer wrapper\">\r\n            <div className=\"centerContainer main-content\">\r\n                {!isEdit ?\r\n                    <><div className=\"centerContainer profile-wrapper\">\r\n                        <div className=\"profile-img-wrapper\">\r\n                            <div className=\"profile-img\"><img src={user.profileUrl ? user.profileUrl : \"img_p.png\"} /></div>\r\n                        </div>\r\n                        <div className=\"sub-profile-wrapper\">\r\n                            <span id=\"nickName\">{user.nickName}</span>\r\n                            <span id=\"profile-location\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {user.Location.dong}</span>\r\n                            {isOwner && <div className=\"edit-btn-wrapper\" onClick={onEditClick}><span className=\"edit-btn\">프로필 수정</span></div>}\r\n                        </div>\r\n                    </div>\r\n                        <span>{user.nickName}님이 작성한 글</span>\r\n                        <hr />\r\n                        {postList.map(post => <PostContainer userObj={user} postObj={post} />)}\r\n                    </> :\r\n                    <div className=\" centerContainer profile-edit-wrapper\">\r\n                        <form className=\"centerContainer\" onSubmit={onSubmit}>\r\n                            <div className=\"centerContainer profile-edit-wrapper2\">\r\n                                <div className=\"centerContainer profile-img-wrapper\">\r\n                                    <div className=\"profile-img\"><img src={editUser.profileUrl ? editUser.profileUrl : \"img_p.png\"} /></div>\r\n                                    <label for=\"profile-img-upload\" id=\"edit-profile-img-btn\">프로필 사진 수정</label>\r\n                                    <input type=\"file\" onChange={setProfileImage} id=\"profile-img-upload\" style={{ display: \"none\" }} />\r\n                                </div>\r\n                                <div className=\"centerContainer sub-profile-wrapper\">\r\n                                    <div className=\"row-container\">\r\n                                        <span className=\"label-span\">닉네임</span>\r\n                                        <div className=\"col-container\">\r\n                                            <div className=\"nickname-wrapper\">\r\n                                                <input type=\"text\" name=\"nickName\" required value={editUser.nickName} placeholder=\"닉네임\" onChange={onChange} />\r\n                                                <span onClick={onCheck} id=\"check-btn\">중복확인</span>\r\n                                            </div>\r\n                                            {checkNick ? <span id=\"nick-error\" style={{ color: '#00aa7d' }}>{nickError}</span>\r\n                                                : <span id=\"nick-error\">{nickError.split(\"\\n\").map(it => <>{it}<br /></>)}</span>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {isOpenDaum && <div className=\"address-modal-bg\">\r\n                                        <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum} />} /></div>}\r\n                                    <div className=\"row-container\">\r\n                                        <span className=\"label-span\">나의 동네</span>\r\n                                        <div className=\"address-form-wrapper\">\r\n                                            <div className=\"address-detail\">\r\n                                                {locationObj && <span id=\"dong\"> <><FontAwesomeIcon icon={faMapMarkerAlt} /> {editUser.Location.dong}</></span>}\r\n                                                <span onClick={onClickLocation} id=\"address-search-btn\">{editUser.Location.detail ? \"주소 재검색\" : \"주소 검색\"}</span>\r\n                                            </div>\r\n                                            <span id=\"address\">{editUser.Location.detail ? editUser.Location.detail : \"동네를 설정해주세요.\"}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"완료\" />\r\n                        </form>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Profile;","import REACT from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from '../routes/Login';\r\nimport Main from '../routes/Main';\r\nimport Post from '../routes/Post';\r\nimport Posting from '../routes/Posting';\r\nimport Setting from '../routes/Setting.js';\r\nimport Profile from '../routes/Profile';\r\n\r\nconst AppRouter = ({ isLoggedin, isSetting, userObj }) => {\r\n    return (<Router>\r\n        <Switch>\r\n            {!isLoggedin ? <Route exact path=\"/\">\r\n                <Login/>\r\n            </Route> : <>\r\n                {!isSetting ?\r\n                    <Route exact path=\"/\">\r\n                        <Setting userObj={userObj}/>\r\n                    </Route>: \r\n                    <>\r\n                        <Route exact path=\"/\" >\r\n                            <Main />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile/>\r\n                        </Route>\r\n                        <Route exact path=\"/posting\">\r\n                            <Posting />\r\n                        </Route>\r\n                        <Route exact path=\"/post\">\r\n                            <Post />\r\n                        </Route>\r\n                    </>}\r\n            </>}\r\n        </Switch>\r\n    </Router>)\r\n}\r\nexport default AppRouter;","import REACT from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../styleSheets/footer.css'\r\nconst Footer=()=>{\r\n    return(    \r\n    <footer>\r\n        <div className=\"row-container\">\r\n          <div className=\"col-container footer-wrapper1\">\r\n            <img src=\"logo4.png\" width=\"50vw\" />\r\n            <span>이웃과 돕고돕는 커뮤니티 돕돕</span>\r\n            <hr />\r\n            <span>Copyright &#169; dobdob 2021</span>\r\n          </div>\r\n          <div className=\"col-container footer-wrapper2\">\r\n            <h2>CONTACT <FontAwesomeIcon icon={faPhone}/></h2>\r\n            <span>runru1030@gmail.com</span>\r\n            <span>+82. 02-xxx-xxxx</span>\r\n          </div>\r\n        </div>\r\n      </footer>);\r\n}\r\n\r\nexport default Footer;","import AppRouter from './Router';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoggedInfo, setSetting } from '../modules/user';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from './Footer'\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { userObj, isLoggedin, isSetting } = useSelector(state => ({\r\n    userObj: state.user.userObj,\r\n    isLoggedin: state.user.isLoggedin,\r\n    isSetting: state.user.isSetting\r\n  }))\r\n  const token = useState(JSON.parse(window.localStorage.getItem('token')));\r\n  const query = queryString.parse(window.location.search);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      console.log(\"출력1\");\r\n      getKakaoTokenHandler(query);\r\n    }\r\n    else {\r\n      if(userObj == null || !token ) {\r\n        dispatch(setLoggedInfo(null, false));\r\n        window.localStorage.removeItem(\"token\");\r\n      }\r\n      else {\r\n        sendJwtTokenToServer(token);\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n  const getKakaoTokenHandler = async (query) => {\r\n    const data = {\r\n      grant_type: \"authorization_code\",\r\n      client_id: process.env.REACT_APP_KAKAO_REST_KEY,\r\n      redirect_uri: \"https://tave7-dobdob.github.io/DobDob-Web/\",\r\n      code: query.code\r\n    };\r\n    const queryString = Object.keys(data)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\r\n      .join('&');\r\n    axios.post('https://kauth.kakao.com/oauth/token', queryString, {\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n      }\r\n    }).then((res) => {\r\n      \r\n      sendKakaoTokenToServer({\r\n        access_token: res.data.access_token,\r\n      });\r\n      window.history.replaceState({}, null, window.location.origin+ window.location.pathname + window.location.hash);\r\n    });\r\n  }\r\n  //일반 로그인\r\n  const sendKakaoTokenToServer = (token) => {\r\n    axios.post('ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/auth/kakao',{...token })\r\n      .then(res => {\r\n        if (res.status == 201 || res.status == 200) {\r\n          window.localStorage.setItem(\"token\", JSON.stringify({\r\n            access_token: res.data.jwt\r\n          }));\r\n          const user=res.data.user;\r\n          dispatch(setLoggedInfo(user, true));\r\n          if (user.nickName != \"\") {\r\n            dispatch(setSetting(true));\r\n          }\r\n          else {\r\n            dispatch(setSetting(false));\r\n          }\r\n        }\r\n        else {\r\n          window.alert(\"로그인에 실패하였습니다.\");\r\n        }\r\n      })\r\n  }\r\n  //자동로그인\r\n  const sendJwtTokenToServer = (jwtToken) => {\r\n    console.log(\"token\");\r\n    axios.post('ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/auth/kakao',{\r\n      headers:{\r\n        'Authorization': jwtToken\r\n      }\r\n     })\r\n      .then(res => {\r\n        if ( res.status == 200) {\r\n          const user=res.data.user;\r\n          dispatch(setLoggedInfo(user, true));\r\n          if (user.nickName != \"\") {\r\n            dispatch(setSetting(true));\r\n          }\r\n          else {\r\n            dispatch(setSetting(false));\r\n          }\r\n        }\r\n        else {\r\n          window.alert(\"로그인에 실패하였습니다.\");\r\n          dispatch(setLoggedInfo(null, false));\r\n          window.localStorage.removeItem(\"token\");\r\n        }\r\n      })\r\n  }\r\n  return (<>\r\n    <AppRouter isLoggedin={isLoggedin} isSetting={isSetting} userObj={userObj} />\r\n    <Footer/>\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport user from './user'\r\nimport postInfo from './postInfo'\r\nimport profileInfo from './profileInfo'\r\nimport { persistReducer } from 'redux-persist';\t// 추가\r\nimport storage from 'redux-persist/lib/storage';\t// 추가\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\t// 추가\r\n\r\n\r\n\t\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  postInfo,\r\n  profileInfo\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\t// 추가\r\n\r\nexport default persistedReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './style.css'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport persistedReducer from './modules';\nimport { persistStore } from 'redux-persist';\t// 추가\nimport { PersistGate } from 'redux-persist/integration/react';\nimport dotenv from 'dotenv'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\ndotenv.config()\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n\n    </Provider >\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}