{"version":3,"sources":["routes/Login.js","modules/profileInfo.js","component/ProfileBox.js","modules/postInfo.js","component/Modal.js","component/LikeComment.js","component/PostContainer.js","component/DaumPost.js","modules/user.js","component/Header.js","routes/Main.js","component/MentionHighlight.js","component/Comment.js","component/SliderSlick.js","component/Grid.js","component/useInput.js","component/EditPostContainer.js","routes/Post.js","routes/Posting.js","routes/Setting.js","routes/Profile.js","component/Router.js","component/Footer.js","component/App.js","modules/index.js","index.js"],"names":["Login","kauthUrl","process","className","src","width","href","id","SET_PROFILE_INFO","initialState","profileObj","isOwner","setProfileInfo","type","ProfileBox","location","date","jwtToken","history","useHistory","dispatch","useDispatch","userObj","useSelector","state","user","onClick","axios","get","headers","then","res","data","push","profileUrl","nickName","icon","faMapMarkerAlt","dong","split","map","it","proTypes","PropTypes","shape","number","string","React","memo","SET_POST_INFO","postObj","setPostInfo","Modal","isOpenModal","setIsOpenModal","children","wrapperRef","useRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","ref","value","LikeComment","onDetailClick","useState","likeCount","setLikeCount","Likes","findIndex","i","User","isLike","setIsLike","likeModal","setLikeModal","onHeartClick","delete","p","post","userId","postId","undefined","faHeart","style","color","faComment","commentCount","PostContainer","Location","createdAt","title","content","substr","filter","index","line","length","Tags","name","DaumPost","setLocationObj","faTimes","onComplete","fullAddress","address","extraAddress","addressType","bname","buildingName","Authorization","documents","si","region_1depth_name","gu","region_2depth_name","region_3depth_name","locationX","x","locationY","y","detail","SET_LOGGED_INFO","SET_SETTING","SET_USER_INFO","locationId","isLoggedin","isSetting","setLoggedInfo","setSetting","setUserInfo","Header","onSubmit","setSearch","search","locationObj","setPostList","onClickMyPage","isOpenMoal","parseFloat","posts","onChange","placeholder","display","for","faSearch","data-toggle","faCaretDown","faUserCircle","window","localStorage","clear","replace","faSignOutAlt","Main","getItem","postList","isOpenDaum","setIsOpenDaum","preventDefault","keyword","substring","faSlidersH","prev","faPlus","MentionHighlight","reactStringReplace","match","Comment","commentObj","SliderSlick","imgArr","dots","infinite","speed","slidesToShow","arrows","adaptiveHeight","img","url","Grid","isOpen","setIsOpen","onToggleClick","height","useInputObj","initalValue","setData","handler","useCallback","e","useFileInput","initalValueArr","fileArr","setFileArr","attachment","setAttachment","files","file","attachmentArr","filesLength","reader","FileReader","onload","result","readAsDataURL","useTagInput","tag","setTag","tagArr","setTagArr","indexOf","includes","idx","arr","splice","EditPostContainer","setIsEdit","useBeforeunload","textObj","setTextObj","onClickDelTag","JSON","stringify","patch","tags","error","alert","message","PostImages","class","Post","postInfo","commentArr","setCommentArr","update","setInterval","Comments","clearInterval","comment","setComment","isEdit","rel","faEllipsisV","confirm","goBack","cmt","toString","Posting","attachments","faImages","multiple","formData","FormData","append","console","log","status","Error","required","Setting","setNickName","errorMess","setErrorMess","nickError","setNickError","checkNick","setCheckNick","test","isExisted","Profile","profileInfo","profileImage","setProfileImage","setEditUser","editUser","userprofile","AppRouter","exact","path","Footer","faPhone","App","token","parse","query","queryString","code","getKakaoTokenHandler","sendJwtTokenToServer","removeItem","a","grant_type","client_id","redirect_uri","Object","keys","k","encodeURIComponent","join","sendKakaoTokenToServer","access_token","replaceState","origin","pathname","hash","setItem","jwt","persistConfig","key","storage","rootReducer","combineReducers","action","persistedReducer","persistReducer","dotenv","config","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.697aea9b.chunk.js","sourcesContent":["import REACT from 'react';\r\nimport '../styleSheets/login.css';\r\nconst Login = () => {\r\n    const kauthUrl=`https://kauth.kakao.com/oauth/authorize?client_id=${process.env.REACT_APP_KAKAO_REST_KEY}&redirect_uri=https://tave7-dobdob.github.io/DobDob-Web/#/&response_type=code`\r\n    return (<><div className=\"Container login\">\r\n        <header><img src=\"logo3.png\" width=\"80px\" /></header>\r\n        <div className=\"centerContainer login-view1\">\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-text\">\r\n                    <h1>이웃과 나누는 <br /> 동네이야기</h1>\r\n                    <p>이웃과 서로 돕고 돕는 커뮤니티 <h2>돕돕</h2> 내 근처에 귀를 기울여봐요 .<br />이웃에게 물어보세요 .</p>\r\n                    <a href={kauthUrl}>\r\n                    <img src=\"kakao_login.png\" id=\"kakao-login-btn\" width=\"200px\" /></a>\r\n                </div>\r\n                <div className=\"randing-img\">\r\n                    <img id=\"randing-img1\" src=\"logo2.png\" width=\"40%\" />\r\n                    <img id=\"randing-img2\" src=\"monitor_poster.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"centerContainer login-view2\">\r\n            <div className=\"randing-wrapper \">\r\n                <div className=\"randing-text wrapper1\">\r\n                    <h1>우리동네 이웃들의 이야기를 볼 수 있어요 !</h1>\r\n                    <p>동네 이웃들의 글을 볼 수 있어요.</p>\r\n                    <span>내 주변과 가까운 동네 이웃들의 글들이 모아져 보여집니다.</span>\r\n                    <br />\r\n                    <span>동네 정보도 얻어가고, 이웃들과 같이 밥도 먹으면서 <br/>새로운 동네를 만들어가보세요 !</span>\r\n                </div>\r\n                <div className=\"randing-img\"><img id=\"randing-img\" src=\"Main.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-img\">\r\n                    <img id=\"randing-img\" src=\"main.gif\" width=\"80%\" /></div>\r\n                <div className=\"randing-text wrapper2\">\r\n                    <p>위치 설정으로 다른 동네의 글들도 볼 수 있어요.</p>\r\n                    <span>다른동네의 이야기들도 궁금하다면 원하는 동네를 설정해서 찾아볼 수 있어요 !</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper\">\r\n                <div className=\"randing-img\">\r\n                    <div className=\"centerContainer searchBar-wrapper\">\r\n                        <img src=\"search.gif\" width=\"100%\" /></div></div>\r\n                <div className=\"randing-text wrapper2\">\r\n                    <p>검색으로 원하는 내용을 찾아 볼 수 있어요 .</p>\r\n                    <span>태그 또는 제목을 검색하여 찾고자 하는 이야기들을 살펴볼 수 있어요 !</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"randing-wrapper randing-block2\">\r\n                <div className=\"randing-text\">\r\n                    <h1>이웃들에게 물어봐요 !</h1>\r\n                    <p>동네의 궁금증이나 사소한 이야기에 대해 <br/>직접 이야기 할 수 있어요.</p>\r\n                    <sppn>직접 원하는 동네에 글을 작성하거나 댓글을 남길 수 있어요 !</sppn>\r\n                </div>\r\n                <div className=\"randing-img\">\r\n                    <img src=\"randing2.png\" width=\"100%\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"centerContainer login-view3\">\r\n            <div className=\"row-container randing-wrapper\">\r\n                <div className=\"randing-text\">\r\n                    <p>카카오 로그인으로 간편하게</p>\r\n                    <h1>지금 시작해보세요 !</h1>\r\n                </div>\r\n                <a href={kauthUrl}>\r\n                <img src=\"kakao_login.png\" id=\"kakao-login-btn\" width=\"200px\" /></a>\r\n            </div>\r\n        </div>\r\n    </div></>)\r\n}\r\n\r\nexport default Login;","\r\nconst SET_PROFILE_INFO = 'postInfo/SET_PROFILE_INFO'; // 로그인 정보 설정\r\nconst initialState = {\r\n    profileObj: null,\r\n    isOwner: false,\r\n  };\r\nexport const setProfileInfo = (profileObj, isOwner) => {\r\n    return {\r\n        type: SET_PROFILE_INFO,\r\n        profileObj,\r\n        isOwner\r\n    };\r\n};\r\n\r\nexport default  function profileInfo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PROFILE_INFO:\r\n            return {...state,\r\n                profileObj: action.profileObj,\r\n                isOwner: action.isOwner\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from 'react-router';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileBox = ({ profileObj, location, date, jwtToken }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const userObj = useSelector(state => state.user.userObj);\r\n\r\n    const onProfileClick = () => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${profileObj.id}`,{\r\n            \r\n            headers: { 'Authorization': jwtToken }\r\n        }).then(res => {\r\n            dispatch(setProfileInfo(res.data.user, profileObj.id == userObj.id));\r\n            history.push(\"/profile\");\r\n        })\r\n    }\r\n    return (<>\r\n        <div className=\"profile-img\" onClick={onProfileClick}><img src={profileObj.profileUrl ? profileObj.profileUrl :\"img_p.png\"} /></div>\r\n        <div className=\"row-container sub-profile-wrapper2\">\r\n            <div className=\"sub-profile-wrapper\">\r\n                <span>{profileObj.nickName}</span>\r\n               {location&&<span id=\"profile-location\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {location.dong}</span>}\r\n            </div>\r\n            {date && <span id=\"date\">{date.split(/[T|.]/, 2).map(it => it + \" \")}</span>}\r\n        </div>\r\n    </>);\r\n}\r\n\r\nProfileBox.proTypes={\r\n    profileObj:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        nickName:PropTypes.string,\r\n        profileUrl:PropTypes.string,\r\n    }),\r\n    location:PropTypes.shape({\r\n        dong: PropTypes.string,\r\n    })\r\n}\r\n\r\nexport default React.memo(ProfileBox);","\r\nconst SET_POST_INFO = 'postInfo/SET_POST_INFO'; // 로그인 정보 설정\r\n//const SET_SETTING = 'postInfo/SET_SETTING'; // validated 값 설정\r\n\r\nconst initialState = {\r\n    postObj: null,\r\n    isOwner: false,\r\n  };\r\nexport const setPostInfo = (postObj, isOwner) => {\r\n    return {\r\n        type: SET_POST_INFO,\r\n        postObj,\r\n        isOwner\r\n    };\r\n};\r\n\r\nexport default  function postInfo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_POST_INFO:\r\n            return {...state,\r\n                postObj: action.postObj,\r\n                isOwner: action.isOwner\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {  useEffect, useRef } from 'react';\r\nconst Modal =({isOpenModal, setIsOpenModal, children})=> {\r\n  const wrapperRef = useRef();\r\n  useEffect(()=>{\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return()=>{\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n  })\r\n  const handleClickOutside=(event)=>{\r\n    if (wrapperRef && !wrapperRef.current.contains(event.target)) {\r\n      setIsOpenModal(false);\r\n    }\r\n    else {\r\n      setIsOpenModal(true);\r\n    }\r\n  }\r\n \r\n    return (<div ref={wrapperRef} value={isOpenModal} className=\"modal\">\r\n      {children}\r\n\r\n    </div>);\r\n  \r\n}\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faComment} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ProfileBox from './ProfileBox';\r\nimport Modal from './Modal';\r\nimport '../styleSheets/post.css'\r\nimport axios from 'axios';\r\nconst LikeComment = ({postObj, userObj, onDetailClick, jwtToken}) => {\r\n\r\n    const [likeCount, setLikeCount]=useState(postObj.likeCount)\r\n    const [isLike, setIsLike] = useState(postObj.Likes.findIndex(i => i.User.id == userObj.id) != -1);\r\n    const [likeModal, setLikeModal] = useState(false)\r\n\r\n    const onHeartClick = () => {\r\n        isLike?\r\n        axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/like/${userObj.id}/${postObj.id}`,{\r\n            \r\n            headers: { 'Authorization': jwtToken }\r\n        }).then(()=>{\r\n            setLikeCount(p=>p-1);\r\n            setIsLike(false)})\r\n        :\r\n        axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/like\", {\r\n            data:{userId:userObj.id, postId:postObj.id},\r\n            headers: { 'Authorization': jwtToken }\r\n        }).then(()=>{\r\n            setLikeCount(p=>p+1);\r\n            setIsLike(true)})\r\n    }\r\n    const onlikeListClick = () => {\r\n        setLikeModal(true);\r\n    }\r\n\r\n    return (<>\r\n        {onDetailClick==undefined?<div className=\"heart-comment-wrapper\">\r\n            <FontAwesomeIcon id=\"icon\" icon={faHeart} style={{ color: `${isLike ? \"#ff7f50\" : \"#c5c5c5\"}` }} onClick={onHeartClick} />\r\n            <span className=\"bold-span\" id=\"like-list\" onClick={onlikeListClick}>좋아요</span>\r\n            <span>{postObj.likeCount}명 </span>\r\n            {likeModal && <>\r\n                <div className=\"modal-bg\"><span></span></div>\r\n                <Modal isOpenModal={likeModal} setIsOpenModal={setLikeModal} children={<>\r\n                    <div className=\"centerContainer like-list-modal\">\r\n                        <span className=\"label\">좋아요</span>\r\n                        <hr />\r\n                        {postObj.Likes.map(it =>\r\n                            <div className=\"post-profile-wrapper\">\r\n                                <ProfileBox profileObj={it.User} />\r\n                            </div>)}\r\n                    </div>\r\n                </>} /></>}\r\n            <FontAwesomeIcon id=\"icon\" icon={faComment} />\r\n            <span className=\"bold-span\">댓글</span><span>{postObj.commentCount}명</span>\r\n        </div>\r\n        :<div className=\"heart-comment-wrapper\">\r\n            <FontAwesomeIcon id=\"icon\" icon={faHeart} style={{ color: `${isLike ? \"#ff7f50\" : \"#c5c5c5\"}` }} onClick={onHeartClick} /> \r\n            <span>{likeCount}</span>\r\n            <FontAwesomeIcon id=\"icon\" icon={faComment} onClick={onDetailClick} />  \r\n            <span>{postObj.commentCount}</span>\r\n        </div>}\r\n    </>)\r\n}\r\nexport default LikeComment;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from 'react-router';\r\nimport ProfileBox from './ProfileBox';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport LikeComment from './LikeComment';\r\nimport '../styleSheets/postContainer.css';\r\nconst PostContainer = ({ userObj, postObj, jwtToken }) => {\r\n    const history = useHistory();\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const onDetailClick = () => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`,{\r\n            \r\n            headers: { 'Authorization': jwtToken }\r\n        })\r\n        .then(res=>{\r\n            dispatch(setPostInfo(res.data.post, userObj.id==postObj.User.id))\r\n            history.push(\"/post\");\r\n            })\r\n        \r\n    }\r\n\r\n    return (<div className=\"post-container\">\r\n        <div className=\"post-profile-wrapper\">\r\n            <ProfileBox profileObj={postObj.User} location={postObj.Location} date={postObj.createdAt}/>\r\n        </div>\r\n        <hr />\r\n        <div className=\"content-wrapper\">\r\n            <h2 onClick={onDetailClick}>{postObj.title}</h2>\r\n            {<div className=\"sub-wrapper\" onClick={onDetailClick}>\r\n                <div>\r\n                    {postObj.content.substr(0, 30).split(\"\\n\").filter((it, index) => index < 2).map((line) => <span><br />{line}</span>)}\r\n                    {(postObj.content.length > 30||postObj.content.split('\\n').length >3) && <button id=\"more-btn\"> ... 더 보기</button>}\r\n                    \r\n                </div>\r\n            </div>}\r\n        </div>\r\n        <LikeComment postObj={postObj} userObj={userObj} onDetailClick={onDetailClick}/>\r\n\r\n        <hr />\r\n        <div className=\"tag-wrapper\">{postObj.Tags&&postObj.Tags.map(it => <span>#{it.name} </span>)}</div>\r\n    </div>);\r\n}\r\n\r\nPostContainer.propTypes = {\r\n    userObj: PropTypes.shape({\r\n        id:PropTypes.number.isRequired\r\n\r\n    }),\r\n    postObj:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        title:PropTypes.string,\r\n        content:PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        likeCount:PropTypes.number,\r\n        commentCount:PropTypes.number,\r\n        Location:PropTypes.object,\r\n        User:PropTypes.object\r\n    })\r\n}\r\nexport default PostContainer;","import REACT, { useState } from 'react';\r\nimport DaumPostCode from 'react-daum-postcode';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from 'axios';\r\nconst DaumPost = ({ setLocationObj , setIsOpenModal}) => {\r\n\r\n    const onPostClick = () => {\r\n        setIsOpenModal(false);\r\n    }\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsOpenModal(false);\r\n        axios.get(`https://dapi.kakao.com/v2/local/search/address.json?query=${fullAddress}`, {\r\n            headers: { Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_REST_KEY}` },\r\n        })\r\n            .then(res => {\r\n                const location = res.data.documents[0];\r\n                setLocationObj({\r\n                    si: location.address.region_1depth_name,\r\n                    gu: location.address.region_2depth_name,\r\n                    dong: location.address.region_3depth_name,\r\n                    locationX: location.address.x,\r\n                    locationY: location.address.y,\r\n                    detail: fullAddress\r\n                })\r\n            })\r\n    }\r\n    return (<>\r\n            <div className=\"address-modal\">\r\n                <div className=\"address-modal-bar\">\r\n                    <span>주소검색</span>\r\n                    <button onClick={onPostClick}><FontAwesomeIcon icon={faTimes} /></button>\r\n                </div>\r\n                <div><DaumPostCode onComplete={handleComplete} className=\"post-code\" /></div>\r\n            </div>\r\n        </>);\r\n}\r\nexport default DaumPost;","\r\nconst SET_LOGGED_INFO = 'user/SET_LOGGED_INFO'; // 로그인 정보 설정\r\nconst SET_SETTING = 'user/SET_SETTING'; // validated 값 설정\r\nconst SET_USER_INFO = 'user/SET_USER_INFO'; // 로그아웃\r\n\r\n\r\n//export const logout = createAction(LOGOUT, AuthAPI.logout);\r\n//export const checkStatus = createAction(CHECK_STATUS, AuthAPI.checkStatus);\r\nconst initialState = {\r\n    userObj: {\r\n        userId: 1,\r\n        //profileUrl:\"test_profile.jpg\",\r\n        nickName: \"김지현\",\r\n        locationId: { dong: \"상도동\", fullAddress: \"서울 동작구 성대로21길 36 (상도동, 우주빌B)\" }\r\n      },\r\n    isLoggedin: false,\r\n    isSetting:false,\r\n  };\r\nexport const setLoggedInfo = (userObj, isLoggedin) => {\r\n    return {\r\n        type: SET_LOGGED_INFO,\r\n        userObj,\r\n        isLoggedin\r\n    };\r\n};\r\n\r\nexport const setSetting = isSetting => {\r\n    return {\r\n        type: SET_SETTING,\r\n        isSetting\r\n    };\r\n};\r\nexport const setUserInfo= userObj => {\r\n    return {\r\n        type: SET_USER_INFO,\r\n        userObj\r\n    };\r\n};\r\nexport default  function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOGGED_INFO:\r\n            return {...state,\r\n                userObj: action.userObj,\r\n                isLoggedin: action.isLoggedin\r\n                };\r\n        case SET_SETTING:\r\n            return { ...state,isSetting: action.isSetting  };\r\n        case SET_USER_INFO:\r\n            return { ...state,userObj: action.userObj  };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown, faUserCircle, faSignOutAlt, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from '../component/Modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport { setLoggedInfo } from '../modules/user';\r\nimport axios from 'axios';\r\nimport '../styleSheets/header.css';\r\nconst Header = ({ onSubmit, setSearch, search, userObj , locationObj, setPostList, jwtToken}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setSearch(value);\r\n    }\r\n    const onClickshap = () => {\r\n        setSearch(\"#\");\r\n    }\r\n\r\n    const onClickMyPage = () => {\r\n        dispatch(setProfileInfo(userObj, true));\r\n        history.push(\"/profile\");\r\n    }\r\n\r\n    const onClickLogo = () => {\r\n        search!=undefined && setSearch(\"\");\r\n        history.push(\"/\");\r\n        if(locationObj!=undefined){\r\n            axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list\", {\r\n                data: {locationX: parseFloat(locationObj.locationX), locationY: parseFloat(locationObj.locationY)},\r\n                headers: { 'Authorization': jwtToken }\r\n            }).then(res => {\r\n                setPostList(res.data.posts)\r\n    \r\n            });\r\n        }\r\n    }\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(setLoggedInfo(null, false));\r\n        axios.get(`https://kauth.kakao.com/oauth/logout?client_id=${process.env.REACT_APP_KAKAO_REST_KEY}&logout_redirect_uri=https://tave7-dobdob.github.io/DobDob-Web/logout`).then(() => {\r\n            window.localStorage.clear();\r\n            history.push(\"/\");\r\n            window.location.replace(\"/\")\r\n        }\r\n        )\r\n    }\r\n    const [isOpenMoal, setIsOpenModal] = useState(false);\r\n    const onModalClick = () => {\r\n        setIsOpenModal(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <header><img src=\"logo2.png\" width=\"60px\" onClick={onClickLogo} />\r\n            {search!=undefined && <form className=\"row-container\" onSubmit={onSubmit}>\r\n                <input type=\"text\" onChange={onChange} placeholder=\"제목 및 태그를 검색해보세요 !\" value={search} />\r\n                <input type=\"submit\" value=\"검색\" id=\"search-btn\" style={{ display: \"none\" }} />\r\n                <span id=\"tag-char-btn\" onClick={onClickshap}>#</span>\r\n                <label id=\"search-btn-label\" for=\"search-btn\"><FontAwesomeIcon icon={faSearch} /></label>\r\n\r\n            </form>}\r\n            {userObj && <div className=\"profile-wrapper\">\r\n                <div onClick={onClickMyPage} className=\"profile-img\" data-toggle=\"tooltip\" title=\"마이 페이지\"><img src={userObj.profileUrl ? userObj.profileUrl : \"img_p.png\"} /></div>\r\n                <span>{userObj.nickName}</span>\r\n                <Modal isOpenMoal={isOpenMoal} setIsOpenModal={setIsOpenModal} children={<>\r\n                    <button onClick={onModalClick} id=\"menu-btn\"><FontAwesomeIcon icon={faCaretDown} /></button>\r\n                    {isOpenMoal && <div className=\"profile-modal\">\r\n                        <button onClick={onClickMyPage}><FontAwesomeIcon icon={faUserCircle} id=\"icon\" /> 프로필 보기</button>\r\n                        <button id=\"logout\" onClick={onClickLogout}><FontAwesomeIcon icon={faSignOutAlt} id=\"icon\" /> 로그아웃</button>\r\n                    </div>}\r\n                </>}>\r\n                </Modal>\r\n            </div>}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport PostContainer from '../component/PostContainer';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faPlus, faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport Modal from '../component/Modal';\r\nimport { useSelector } from 'react-redux';\r\nimport '../styleSheets/main.css';\r\nimport axios from 'axios';\r\nimport Header from '../component/Header';\r\nconst Main = () => {\r\n    const history=useHistory();\r\n    const jwtToken= window.localStorage.getItem(\"token\");\r\n    const userObj = useSelector(state => state.user.userObj);\r\n    const [postList, setPostList] = useState([]);\r\n    const [locationObj, setLocationObj] = useState(userObj.Location);\r\n    useEffect(() => {\r\n        axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list\", {\r\n            data:{locationX: parseFloat(locationObj.locationX),\r\n            locationY: parseFloat(locationObj.locationY)},\r\n            headers: { 'Authorization': jwtToken }\r\n        }).then(res => {\r\n            setPostList(res.data.posts)\r\n\r\n        });\r\n    },[locationObj]); \r\n    \r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        search[0] == \"#\" ?\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list/tag`, {\r\n                data:{keyword:search.substring(1),\r\n                locationX: parseFloat(locationObj.locationX),\r\n                locationY: parseFloat(locationObj.locationY)},\r\n                headers: { 'Authorization': jwtToken }\r\n            }).then(res => setPostList(res.data.posts))//태그 검색\r\n            :\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/list/title`,{\r\n                data:{keyword:search,\r\n                locationX: parseFloat(locationObj.locationX),\r\n                locationY: parseFloat(locationObj.locationY)},\r\n                headers: { 'Authorization': jwtToken }\r\n            }).then(res => setPostList(res.data.posts)) //제목 검색\r\n    }\r\n    \r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n    const onClickPosting=()=>{\r\n        history.push(\"/posting\")\r\n    }\r\n    return (<div className=\"Container main\">\r\n        <Header onSubmit={onSubmit} search={search} setSearch={setSearch} userObj={userObj} locationObj={locationObj} setPostList={setPostList} jwtToken={jwtToken}/>\r\n        <div className=\"centerContainer article-wrapper\">\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n            <div className=\"location-wrapper\">\r\n                <span className=\"label\"><FontAwesomeIcon icon={faMapMarkerAlt} /> 나의 동네<FontAwesomeIcon id=\"icon\" icon={faSlidersH} onClick={onClickLocation} data-toggle=\"tooltip\" title=\"동네 재설정\" /></span>\r\n                <span>{locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n            </div>\r\n\r\n            <div className=\"centerContainer post-wrapper\">\r\n                {!postList||postList.length == 0 ? <>\r\n                    <div className=\"centerContainer nothing-post-wrapper\"><p>해당 동네 게시물이 아직 없습니다.<br />먼저 글을 작성해보세요 !</p>\r\n                        <img src=\"nothingPost.png\" width=\"60%\" />\r\n                    </div>\r\n                </> : postList.map(post => <PostContainer postObj={post} userObj={userObj} jwtToken={jwtToken}/>)}\r\n            </div>\r\n            <FontAwesomeIcon id=\"plus-icon\" icon={faPlus} data-toggle=\"tooltip\" title=\"글쓰기\" onClick={onClickPosting} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\n\r\nconst MentionHighlight = ({ content }) => {\r\n\r\n    return (\r\n        <div className=\"comment-highlight\">\r\n            {content.split('\\n').map(line =>\r\n                <div>\r\n                    {reactStringReplace(line, /(@\\S+)/g, (match, i) => {\r\n                        return (\r\n                            <span style={{ color: '#1b73d8' }}>{match}</span>\r\n                        )\r\n                    })}\r\n                    <br />\r\n                </div>)}\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo( MentionHighlight);","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MentionHighlight from './MentionHighlight';\r\nimport ProfileBox from './ProfileBox';\r\nconst Comment = ({ commentObj, isOwner , jwtToken}) => {\r\n\r\n    const onDelClick = () => {\r\n        axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/comment/${commentObj.id}`,{\r\n            headers:{\r\n              'Authorization': jwtToken\r\n            }})\r\n    }\r\n    return (<div className=\"comment\">\r\n        <div className=\"post-profile-wrapper\">\r\n            <ProfileBox profileObj={commentObj.User} location={commentObj.User.Location} date={commentObj.createdAt}/>\r\n            {isOwner && <button id=\"del-btn\" onClick={onDelClick}>삭제</button>}\r\n        </div>\r\n        <div>\r\n            <MentionHighlight content={commentObj.content} />\r\n        </div>\r\n    </div>)\r\n}\r\nexport default React.memo(Comment);","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nconst SliderSlick =({imgArr})=> {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      arrows:true,adaptiveHeight:true\r\n    }\r\n    return (\r\n      <div className=\"slider\">\r\n        <Slider {...settings}>\r\n          {imgArr.map(img=> <div className=\"img-wrapper\">\r\n            <img src={img.url}/></div>)}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default SliderSlick;","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SliderSlick from './SliderSlick';\r\nconst Grid = ({ imgArr }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onToggleClick = () => {\r\n    setIsOpen(prev => !prev);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"grid-wrapper\" onClick={onToggleClick}>\r\n        {imgArr.length == 1 &&\r\n          <div className=\"single-grid-container\">\r\n            <img width=\"100%\" src={imgArr[0].url} />\r\n          </div>\r\n        }\r\n        {imgArr.length == 2 || imgArr.length == 4 &&\r\n          <div className=\"grid-container\">\r\n            {imgArr.map(it => <div><img height=\"100%\" src={it.url} /></div>)}\r\n          </div>\r\n        }\r\n        {imgArr.length == 3 &&\r\n          <div className=\"grid-container\">\r\n            {imgArr.map((it, index) => {\r\n              if (index == 0) return <div className=\"item1\"><img height=\"100%\" src={it.url} /></div>\r\n              else return <div><img height=\"100%\" src={it.url} /></div>\r\n            })}\r\n          </div>}\r\n        {imgArr.length==5&&\r\n        <div className=\"grid-container\">\r\n          {imgArr.map((it, index) => {\r\n            if (index == 3) return <div>\r\n              <span>+ 1</span>\r\n              <img className=\"plus-img\" height=\"100%\" src={it.url} />\r\n            </div>\r\n            else if (index == 4) return\r\n            else return <div><img height=\"100%\" src={it.url} /></div>\r\n          })}\r\n        </div>}\r\n\r\n      </div>\r\n      {isOpen &&\r\n        <div className=\"wrapper\">\r\n          <div className=\"centerContainer slider-wrapper\">\r\n            <button id=\"close-btn\" onClick={onToggleClick}><FontAwesomeIcon icon={faTimes} /></button>\r\n            <div className=\"centerContainer slider-wrapper2\"><SliderSlick imgArr={imgArr} /></div>\r\n          </div>\r\n        </div>}\r\n    </>\r\n  )\r\n}\r\nexport default Grid;","import React, {  useState, useCallback } from 'react';\r\n\r\nexport function useInput(initalValue = null) {\r\n\r\n  const [data, setData] = useState(initalValue);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n      setData(value);\r\n    },\r\n    [data]\r\n  );\r\n  return [data, handler];\r\n};\r\n\r\nexport function useInputObj(initalValue = null) {\r\n\r\n  const [data, setData] = useState(initalValue);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n\r\n      setData({\r\n        ...data,\r\n        [name]: value\r\n      });\r\n    },\r\n    [data]\r\n  );\r\n  return [data, handler];\r\n};\r\nexport function useFileInput(initalValue = null,initalValueArr=null){\r\n\r\n  const [fileArr, setFileArr] = useState(initalValue);\r\n  const [attachment, setAttachment] = useState(initalValueArr);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { target: { files } } = e;\r\n      setFileArr(files)\r\n      const attachmentArr = [];\r\n      let filesLength = files.length > 5 ? 5 : files.length;\r\n      let file;\r\n\r\n      for (let i = 0; i < filesLength; i++) {\r\n          file = files[i];\r\n          let reader = new FileReader();\r\n          reader.onload = () => {\r\n              attachmentArr[i] = reader.result;\r\n              setAttachment([...attachmentArr]);\r\n          };\r\n          reader.readAsDataURL(file);\r\n      }},\r\n    [fileArr, attachment]\r\n  );\r\n\r\n  return [fileArr, handler, attachment, handler];\r\n}\r\nexport function useTagInput(initalValue = null, initalValueArr = null) {\r\n  const [tag, setTag] = useState(initalValue);\r\n  const [tagArr, setTagArr] = useState(initalValueArr);\r\n\r\n  const handler = useCallback(\r\n    e => {\r\n      const { value, name } = e.target;\r\n      setTag(value);\r\n      if (value == \" \") { setTag(value.replace(' ', '')); }\r\n      else if ((value.indexOf(\" \")) != -1) {\r\n        setTag(\"\");\r\n        if (!tagArr.includes(value)) {\r\n          setTagArr(tagArr => ([...tagArr, value.replace(' ', '')]));\r\n        }\r\n      }\r\n\r\n    },\r\n    [tag, tagArr]\r\n  );\r\n  const onClick = (idx) => {\r\n    //태그 삭제 기능\r\n    let arr = tagArr;\r\n    arr.splice(idx, 1)\r\n    setTagArr([...arr])\r\n  }\r\n  return [tag, handler, tagArr, handler, onClick];\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport DaumPost from './DaumPost';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport Grid from './Grid';\r\nimport { useInputObj, useTagInput } from './useInput';\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from './Modal';\r\nconst EditPostContainer = ({ postObj, location, setIsEdit, jwtToken }) => {\r\n    const dispatch = useDispatch();\r\n    useBeforeunload((event) => event.preventDefault());\r\n\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const [locationObj, setLocationObj] = useState(location);//for 주소검색 component\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(true);\r\n    }\r\n\r\n    const [textObj, setTextObj] = useInputObj({\r\n        title: postObj.title,\r\n        content: postObj.content\r\n    })\r\n    const [tag, setTag, tagArr, _, onClickDelTag] = useTagInput(\"\", postObj.Tags.map(it => it.name));\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            JSON.stringify(location) !== JSON.stringify(locationObj) ?\r\n                axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`, {\r\n                    data: { ...textObj, tags: JSON.stringify(tagArr), location: JSON.stringify(locationObj) },\r\n                    headers: { 'Authorization': jwtToken }\r\n                }).then(() => {\r\n                    dispatch(setPostInfo({ ...postObj, ...textObj, Tags: tagArr, Location: locationObj }, true));\r\n                    setIsEdit(false);\r\n                })\r\n                :\r\n                axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`, {\r\n                    data: { ...textObj, tags: JSON.stringify(tagArr) },\r\n                    headers: { 'Authorization': jwtToken }\r\n                }).then(() => {\r\n                    dispatch(setPostInfo({ ...postObj, ...textObj, Tags: tagArr, Location: locationObj }, true));\r\n                    setIsEdit(false);\r\n                })\r\n        } catch (error) {\r\n            window.alert(error.message)\r\n        }\r\n    }\r\n    return (<>\r\n\r\n        <div className=\"centerContainer main-content\">\r\n\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum} />} /></div>}\r\n            <div className=\"post-container edit-post-container\">\r\n                <div className=\"menu-wrapper\">\r\n                    <span className=\"location\" data-toggle=\"tooltip\" title=\"위치 재설정\" onClick={onClickLocation}><FontAwesomeIcon icon={faMapMarkerAlt} id=\"marker\" color=\"#ffc600\" /> {locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"content-wrapper\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요.\" value={textObj.title} onChange={setTextObj} />\r\n                        <hr />\r\n                        <TextareaAutosize name=\"content\" placeholder=\"내용을 입력하세요.\" id=\"text-box\" value={textObj.content} onChange={setTextObj} />\r\n                        <input type=\"submit\" id=\"submit-btn\" value=\"완료\" />\r\n                    </form>\r\n                </div>\r\n                {postObj.PostImages.length > 0 && <Grid imgArr={postObj.PostImages} />}\r\n\r\n                <div className=\"tag-wrapper posting-tag-wrapper\">\r\n                    <span>#</span>\r\n                    <input type=\"text\" name=\"tag\" value={tag} onChange={setTag} placeholder=\"태그를 입력해보세요 !\" />\r\n                    {!!tagArr && tagArr.map((tag, index) => <div class=\"centerContainer tag-box\"><span>{tag}<span id=\"del-btn\" onClick={() => onClickDelTag(index)}>X</span></span>\r\n                    </div>)}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nEditPostContainer.propTypes = {\r\n    postObj: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        title: PropTypes.string,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        likeCount: PropTypes.number,\r\n        commentCount: PropTypes.number,\r\n        Location: PropTypes.object,\r\n        User: PropTypes.object,\r\n        PostImages: PropTypes.array\r\n    }),\r\n    location: PropTypes.shape({\r\n        dong: PropTypes.string,\r\n    }),\r\n    setIsEdit: PropTypes.node\r\n}\r\nexport default EditPostContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {  faSearch, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Comment from '../component/Comment';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport MentionHighlight from '../component/MentionHighlight';\r\nimport EditPostContainer from '../component/EditPostContainer';\r\nimport ProfileBox from '../component/ProfileBox';\r\nimport Modal from '../component/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../styleSheets/post.css'\r\nimport axios from 'axios';\r\nimport { setPostInfo } from '../modules/postInfo';\r\nimport Grid from '../component/Grid'\r\nimport Header from '../component/Header';\r\nimport LikeComment from '../component/LikeComment';\r\nconst Post = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const jwtToken = window.localStorage.getItem(\"token\");\r\n    const { postObj, isOwner } = useSelector(state => ({\r\n        postObj: state.postInfo.postObj,\r\n        isOwner: state.postInfo.isOwner\r\n    }));\r\n    const userObj = useSelector(state => state.user.userObj);\r\n    const [commentArr, setCommentArr] = useState([]);\r\n    useEffect(() => {\r\n        const update = setInterval(() => {\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`,{\r\n                headers: { 'Authorization': jwtToken }}).then(res => {\r\n                dispatch(setPostInfo(res.data.post, isOwner))\r\n                setCommentArr(res.data.post.Comments)\r\n            })\r\n        }, 1000)\r\n        return () => {\r\n            setIsEdit(false);\r\n            clearInterval(update);\r\n\r\n        }\r\n    }, [])\r\n    const [comment, setComment] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setComment(value);\r\n    }\r\n    const onCommentSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const cmt = {\r\n                content: comment,\r\n                userId: userObj.id,\r\n                postId: postObj.id\r\n            }\r\n            //서버 전송\r\n            axios.post(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/comment/`, { \r\n                data:{...cmt},\r\n                headers: { 'Authorization': jwtToken } })\r\n            setComment(\"\");\r\n        } catch (error) {\r\n            window.alert(error.toString())\r\n        }\r\n    }\r\n    \r\n    const onDeleteClick = () => {\r\n        if (window.confirm(\"글을 삭제하시겠습니까?\") == true) {\r\n            axios.delete(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/${postObj.id}`,{\r\n                headers: { 'Authorization': jwtToken }}).then(history.goBack(1))\r\n        }\r\n    }\r\n    const onModalClick = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const onEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const [isOpenMoal, setIsOpenModal] = useState(false);\r\n\r\n    return (<>\r\n        <head><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" /></head>\r\n        <div className=\"Container post\">\r\n            <Header userObj={userObj}/>\r\n            {!isEdit ? <>\r\n                <div className=\"main-content\">\r\n                    <div className=\"post-container\">\r\n                        <div className=\"post-profile-wrapper\">\r\n                            <ProfileBox profileObj={postObj.User} location={postObj.Location} jwtToken={jwtToken}/>\r\n                            <div className=\"modal-container\">\r\n                                <Modal isOpenModal={isOpenMoal} setIsOpenModal={setIsOpenModal} children={<>\r\n                                    {isOwner && !isOpenMoal && <button onClick={onModalClick} id=\"menu-btn\"><FontAwesomeIcon icon={faEllipsisV} /></button>}\r\n                                    {isOpenMoal && <div className=\"edit-del-wrapper\">\r\n                                        <button onClick={onEditClick}>수정</button>\r\n                                        <button onClick={onDeleteClick}>삭제</button></div>}\r\n                                </>}/>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"content-wrapper\">\r\n                            <h2>{postObj.title}</h2>\r\n                            <span id=\"date\">{postObj.createdAt.split(/[T|.]/, 2).map(it => it + \" \")}</span>\r\n                            <div className=\"sub-wrapper\">\r\n                                <div>\r\n                                    {postObj.content.split(\"\\n\").map((line) => <span><br />{line}</span>)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {postObj.PostImages.length > 0 && <Grid imgArr={postObj.PostImages} />}\r\n                        <hr />\r\n                        <div className=\"tag-wrapper\">{postObj.Tags && postObj.Tags.map(it => <span>#{it.name} </span>)}</div>\r\n                    </div>\r\n                    <div className=\"comment-container\">\r\n                        <LikeComment postObj={postObj} userObj={userObj} jwtToken={jwtToken}/>\r\n                        <form onSubmit={onCommentSubmit}>\r\n                            <TextareaAutosize id=\"comment-field\" type=\"text\" placeholder=\"댓글을 입력해주세요. \" value={comment} onChange={onChange} />\r\n                            <MentionHighlight content={comment} onChange={onChange} />\r\n                            <input type=\"submit\" value=\"&#xf054;\" />\r\n                        </form>\r\n\r\n                        <div className=\"comment-scroll-wrapper\">\r\n                            {commentArr.length == 0 ?\r\n                                <div className=\"centerContainer nothing-wrapper\">\r\n                                    <h5>아직 댓글이 없습니다 <FontAwesomeIcon icon={faSearch} /></h5>\r\n                                </div> : commentArr.map(comment => <Comment commentObj={comment} isOwner={comment.User.id == userObj.id} jwtToken={jwtToken}/>)}\r\n                        </div>\r\n                    </div>\r\n                </div></> : <EditPostContainer postObj={postObj} location={postObj.Location} setIsEdit={setIsEdit} jwtToken={jwtToken}/>}\r\n        </div>\r\n\r\n\r\n    </>)\r\n}\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faImages } from \"@fortawesome/free-regular-svg-icons\";\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport DaumPost from '../component/DaumPost';\r\nimport axios from 'axios';\r\nimport '../styleSheets/posting.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { useFileInput, useInputObj, useTagInput } from '../component/useInput';\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport Modal from '../component/Modal';\r\nimport Header from '../component/Header';\r\nconst Posting = () => {\r\n    const history = useHistory();\r\n    const jwtToken=window.localStorage.getItem(\"token\");\r\n    useBeforeunload((event) => event.preventDefault());\r\n\r\n    const userObj=useSelector(state=>state.user.userObj);\r\n    const [locationObj, setLocationObj] = useState(userObj.Location);\r\n\r\n    const [fileArr, setFileArr, attachments, _] = useFileInput([],null);\r\n    const [tag, setTag, tagArr, __, onClickDelTag] = useTagInput(\"\",[]);\r\n    const [textObj, setTextObj] = useInputObj({\r\n        title: \"\",\r\n        content: \"\"\r\n    })\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            for (let i = 0; i < fileArr.length; i++) {\r\n                formData.append('postImage', fileArr[i])\r\n            }\r\n            console.log(JSON.stringify(locationObj));\r\n            formData.append('userId', userObj.id)\r\n            formData.append('location', JSON.stringify(locationObj))\r\n            formData.append('title', textObj.title)\r\n            formData.append('content', textObj.content)\r\n            formData.append('tags', JSON.stringify(tagArr))\r\n            \r\n            axios.post(\"http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/post/upload\", {\r\n                data:formData,\r\n                headers: { 'Authorization': jwtToken }}).then(res=>{ \r\n                if(res.status==201)history.push(\"/\")\r\n                else{\r\n                    throw new Error(\"Posting 에러\")\r\n                }\r\n            })  \r\n        }\r\n        catch(error){\r\n            window.alert(error.message);\r\n        }\r\n    }\r\n    \r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(true);\r\n    }\r\n    return (<>\r\n        <div className=\"Container posting\">\r\n            <Header/>\r\n            <div className=\"centerContainer main-content\">\r\n            {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n                <div className=\"centerContainer posting-container\">\r\n                    <div className=\"menu-wrapper\">\r\n                        <span className=\"location\" data-toggle=\"tooltip\" title=\"위치 재설정\" onClick={onClickLocation}><FontAwesomeIcon icon={faMapMarkerAlt} id=\"marker\" color=\"#ffc600\" /> {locationObj ? locationObj.dong : \"동네를 설정해주세요.\"}</span>\r\n                        <label for=\"photo-upload\" data-toggle=\"tooltip\" title=\"사진 첨부\"><FontAwesomeIcon icon={faImages} /> <span>사진(최대 5장)</span></label>\r\n                        <input multiple=\"multiple\" type=\"file\" onChange={setFileArr} id=\"photo-upload\" style={{ display: \"none\" }} />\r\n                    </div>\r\n                    <div className=\"posting-wrapper\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <input type=\"text\" name=\"title\" placeholder=\"제목을 입력하세요.\" required value={textObj.title} onChange={setTextObj} />\r\n                            <hr />\r\n                            {attachments != null && <>\r\n                                <span id=\"img-count\">{attachments.length}/5</span>\r\n                                <div className=\"attachment-wrapper\">\r\n                                    {attachments.map(img => <img src={img} width=\"100px\" />)}\r\n                                </div>\r\n                                <hr /></>}\r\n                            <TextareaAutosize name=\"content\" placeholder=\"내용을 입력하세요.\" id=\"text-box\" required value={textObj.content} onChange={setTextObj} />\r\n                            <input type=\"submit\" id=\"submit-btn\" value=\"완료\" />\r\n                        </form>\r\n                        <div className=\"tag-wrapper posting-tag-wrapper\">\r\n                            <span>#</span>\r\n                            <input type=\"text\" name=\"tag\" value={tag} onChange={setTag} placeholder=\"태그를 입력해보세요 !\" />\r\n                            {!!tagArr&&tagArr.map((tag, index) => <div class=\"centerContainer tag-box\"><span>{tag}<span id=\"del-btn\" onClick={() => onClickDelTag(index)}>X</span></span>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>)\r\n}\r\nexport default Posting;\r\n","import REACT, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport { useDispatch } from 'react-redux';\r\nimport user, { setSetting, setUserInfo } from '../modules/user';\r\nimport '../styleSheets/setting.css';\r\nimport axios from 'axios';\r\nimport Modal from '../component/Modal';\r\nconst Setting = ({ userObj }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const jwtToken=window.localStorage.getItem(\"token\");\r\n    const [nickName, setNickName] = useState(\"\");\r\n    const [errorMess, setErrorMess] = useState(\"\");\r\n    const [nickError, setNickError] = useState(\"\");\r\n    const [checkNick, setCheckNick] = useState(false);\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n    const [locationObj, setLocationObj] = useState(null);\r\n    useEffect(() => {\r\n        locationObj != null && setErrorMess(\"\");\r\n    }, [locationObj])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (!checkNick) throw new Error('중복확인을 해주세요.');\r\n            if (!locationObj) throw new Error('동네를 설정해주세요.');\r\n            //서버 setting 정보 post \r\n            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${userObj.id}`, { \r\n                data:{nickName: nickName, location: JSON.stringify(locationObj)},\r\n                headers: { 'Authorization': jwtToken } }).then(() => {\r\n                dispatch(setUserInfo({ ...userObj, nickName: nickName, Location: locationObj }))\r\n                dispatch(setSetting(true));\r\n                history.push(\"/\");\r\n            })\r\n        } catch (error) {\r\n            if (!checkNick) setNickError(error.message);\r\n            else setErrorMess(error.message);\r\n        }\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNickName(value);\r\n    }\r\n    const onCheck = () => {\r\n        setErrorMess(\"\");\r\n        let valNick = /^[가-힣a-z0-9]{2,20}$/g;\r\n        if (!valNick.test(nickName)) {\r\n            setCheckNick(false);\r\n            setNickError('- 2자 이상 20자 이하의 영문 소문자/한글(숫자혼합 가능)\\n- 공백 및 특수문자 불가')\r\n        }\r\n        else {\r\n            //DB중복확인\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/nickname/${nickName}`,{\r\n                headers: { 'Authorization': jwtToken }}).then(res => {\r\n                setCheckNick(!res.data.isExisted)\r\n                !res.data.isExisted ?\r\n                    setNickError(\"사용가능한 닉네임입니다.\")\r\n                    :\r\n                    setNickError(\"이미 사용중인 닉네임입니다.\")\r\n            });\r\n        }\r\n    }\r\n    const onPostClick = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"Container setting\">\r\n            <header><img src=\"logo2.png\" width=\"80px\" /></header>\r\n            <div className=\"setting-wrapper\">\r\n                <div className=\"text-wrapper\">\r\n                    <h1>돕돕에서 사용할 <br /> 닉네임과 내 동네를 설정하여 <br />지금 바로 이웃들을 만나보세요 !</h1>\r\n                    <p>닉네임과 내 동네는 추후에도 변경이 가능합니다.</p>\r\n                    <img src=\"setting.png\" width=\"100%\" />\r\n                </div>\r\n                <div className=\"centerContainer form-wrapper-wrapper\">\r\n                    <div className=\"centerContainer form-wrapper\">\r\n                        <form onSubmit={onSubmit} className=\"centerContainer\">\r\n                            <div className=\"sub-wrapper\">\r\n                                <span>닉네임</span>\r\n                                <div className=\"nickname-wrapper\">\r\n                                    <input type=\"text\" required value={nickName} onChange={onChange} placeholder=\"최소 2자 이상\" />\r\n                                    <span onClick={onCheck} id=\"check-btn\">중복확인</span>\r\n                                </div>\r\n                                {checkNick ? <span id=\"nick-error\" style={{ color: '#00aa7d' }}>{nickError}</span> :\r\n                                    <span id=\"nick-error\">{nickError.split(\"\\n\").map(it => <>{it}<br /></>)}</span>}\r\n                            </div>\r\n                            <div className=\"sub-wrapper\">\r\n                                <span>내 동네 설정 </span>\r\n                                {isOpenDaum && <div className=\"address-modal-bg\">\r\n                <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum}/>}/></div> }\r\n\r\n                                <div className=\"address-detail\">\r\n                                    {locationObj && <span id=\"dong\"> <><FontAwesomeIcon icon={faMapMarkerAlt} /> {locationObj.dong}</></span>}\r\n                                    <span onClick={onPostClick} id=\"address-search-btn\">{locationObj ? \"주소 재검색\" : \"주소 검색\"}</span>\r\n                                </div>\r\n                                <span id=\"address\">{locationObj ? locationObj.detail : \"동네를 설정해주세요.\"}</span>\r\n\r\n                                <span id=\"error\">{errorMess}</span>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"돕돕 시작하기\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div></>)\r\n}\r\n\r\nexport default Setting;","import REACT, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DaumPost from '../component/DaumPost';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUserInfo } from '../modules/user';\r\nimport { setProfileInfo } from '../modules/profileInfo';\r\nimport '../styleSheets/profile.css'\r\nimport PostContainer from '../component/PostContainer';\r\nimport axios from 'axios';\r\nimport { useFileInput } from '../component/useInput';\r\nimport Modal from '../component/Modal';\r\nimport Header from '../component/Header';\r\nconst Profile = () => {\r\n    const jwtToken=window.localStorage.getItem(\"token\");\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, isOwner } = useSelector(state => ({\r\n        user: state.profileInfo.profileObj,\r\n        isOwner: state.profileInfo.isOwner\r\n    }))\r\n    const [postList, setPostList] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`,{\r\n            headers: { 'Authorization': jwtToken }}).then(res => {\r\n            setPostList(res.data.posts);\r\n        });\r\n    }, [user])\r\n\r\n\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const onEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const [checkNick, setCheckNick] = useState(false);\r\n    const [nickError, setNickError] = useState(\"\");\r\n    const onCheck = () => {\r\n        let valNick = /^[가-힣a-z0-9]{2,20}$/g;\r\n        if (!valNick.test(editUser.nickName)) {\r\n            setCheckNick(false);\r\n            setNickError('- 2자 이상 20자 이하의 영문 소문자/한글(숫자혼합 가능)\\n- 공백 및 특수문자 불가')\r\n        }\r\n        else if (user.nickName == editUser.nickName) {\r\n            setCheckNick(true);\r\n            setNickError(\"사용가능한 닉네임입니다.\");\r\n        }\r\n        else {\r\n            axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/nickname/${editUser.nickName}`,{\r\n                headers: { 'Authorization': jwtToken }}).then(res => {\r\n                setCheckNick(!res.data.isExisted)\r\n                !res.data.isExisted ?\r\n                    setNickError(\"사용가능한 닉네임입니다.\")\r\n                    :\r\n                    setNickError(\"이미 사용중인 닉네임입니다.\")\r\n            });\r\n        }\r\n    }\r\n\r\n    const [locationObj, setLocationObj] = useState(user.Location);\r\n    const [isOpenDaum, setIsOpenDaum] = useState(false);\r\n\r\n    const [profileImage, setProfileImage, profileUrl, _] = useFileInput(null, user.profileUrl);\r\n    useEffect(() => {\r\n        setEditUser(editUser => ({ ...editUser, Location: locationObj, profileUrl: profileUrl }));\r\n    }, [locationObj, profileUrl])\r\n    const onClickLocation = () => {\r\n        setIsOpenDaum(prev => !prev);\r\n    }\r\n\r\n\r\n    const [editUser, setEditUser] = useState(user);\r\n    const onChange = (event) => {\r\n        const { target: { value, name } } = event;\r\n        setEditUser(editUser => ({ ...editUser, [name]: value }))\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (JSON.stringify(user) === JSON.stringify(editUser)) {\r\n                setIsEdit(false);\r\n            }\r\n            else {\r\n                if (user.nickName != editUser.nickName && !checkNick) throw new Error('중복확인을 해주세요.');\r\n\r\n                const userprofile = { nickName: editUser.nickName, location: JSON.stringify(locationObj) }\r\n                if (profileImage) {\r\n                    const formData = new FormData();\r\n                    formData.append('profileImage', profileImage[0])\r\n                    axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/profile/${user.id}`, {\r\n                        data:formData,\r\n                        headers: { 'Authorization': jwtToken }}).then(res => {\r\n                        res.status == 200 &&\r\n                            axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}`, {\r\n                                data:userprofile,\r\n                                headers: { 'Authorization': jwtToken }}).then(() => {\r\n/*                                 axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`).then(res => {\r\n                                    setPostList(res.data.posts)\r\n                                }); */\r\n                            })\r\n                    })\r\n                }\r\n                else {\r\n                    axios.patch(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}`, {\r\n                        data:userprofile,\r\n                        headers: { 'Authorization': jwtToken }}).then(() => {\r\n /*                        axios.get(`http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/user/${user.id}/posts`).then(res => {\r\n                            setPostList(res.data.posts)\r\n                        }); */\r\n                    })\r\n                }\r\n                dispatch(setUserInfo({ ...editUser, profileUrl: profileUrl }));\r\n                dispatch(setProfileInfo({ ...editUser, profileUrl: profileUrl }, true));\r\n                setIsEdit(false);\r\n                setIsOpenDaum(false);\r\n                setNickError(\"\");\r\n            }\r\n        } catch (error) {\r\n            if (!checkNick) setNickError(error.message);\r\n        }\r\n    }\r\n\r\n    return (<div className=\"Container profile\">\r\n        <Header />\r\n        <div className=\"centerContainer wrapper\">\r\n            <div className=\"centerContainer main-content\">\r\n                {!isEdit ?\r\n                    <><div className=\"centerContainer profile-wrapper\">\r\n                        <div className=\"profile-img-wrapper\">\r\n                            <div className=\"profile-img\"><img src={user.profileUrl ? user.profileUrl : \"img_p.png\"} /></div>\r\n                        </div>\r\n                        <div className=\"sub-profile-wrapper\">\r\n                            <span id=\"nickName\">{user.nickName}</span>\r\n                            <span id=\"profile-location\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {user.Location.dong}</span>\r\n                            {isOwner && <div className=\"edit-btn-wrapper\" onClick={onEditClick}><span className=\"edit-btn\">프로필 수정</span></div>}\r\n                        </div>\r\n                    </div>\r\n                        <span>{user.nickName}님이 작성한 글</span>\r\n                        <hr />\r\n                        {postList.map(post => <PostContainer userObj={user} postObj={post} jwtToken={jwtToken} />)}\r\n                    </> :\r\n                    <div className=\" centerContainer profile-edit-wrapper\">\r\n                        <form className=\"centerContainer\" onSubmit={onSubmit}>\r\n                            <div className=\"centerContainer profile-edit-wrapper2\">\r\n                                <div className=\"centerContainer profile-img-wrapper\">\r\n                                    <div className=\"profile-img\"><img src={editUser.profileUrl ? editUser.profileUrl : \"img_p.png\"} /></div>\r\n                                    <label for=\"profile-img-upload\" id=\"edit-profile-img-btn\">프로필 사진 수정</label>\r\n                                    <input type=\"file\" onChange={setProfileImage} id=\"profile-img-upload\" style={{ display: \"none\" }} />\r\n                                </div>\r\n                                <div className=\"centerContainer sub-profile-wrapper\">\r\n                                    <div className=\"row-container\">\r\n                                        <span className=\"label-span\">닉네임</span>\r\n                                        <div className=\"col-container\">\r\n                                            <div className=\"nickname-wrapper\">\r\n                                                <input type=\"text\" name=\"nickName\" required value={editUser.nickName} placeholder=\"닉네임\" onChange={onChange} />\r\n                                                <span onClick={onCheck} id=\"check-btn\">중복확인</span>\r\n                                            </div>\r\n                                            {checkNick ? <span id=\"nick-error\" style={{ color: '#00aa7d' }}>{nickError}</span>\r\n                                                : <span id=\"nick-error\">{nickError.split(\"\\n\").map(it => <>{it}<br /></>)}</span>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {isOpenDaum && <div className=\"address-modal-bg\">\r\n                                        <Modal isOpenModal={isOpenDaum} setIsOpenModal={setIsOpenDaum} children={<DaumPost setLocationObj={setLocationObj} setIsOpenModal={setIsOpenDaum} />} /></div>}\r\n                                    <div className=\"row-container\">\r\n                                        <span className=\"label-span\">나의 동네</span>\r\n                                        <div className=\"address-form-wrapper\">\r\n                                            <div className=\"address-detail\">\r\n                                                {locationObj && <span id=\"dong\"> <><FontAwesomeIcon icon={faMapMarkerAlt} /> {editUser.Location.dong}</></span>}\r\n                                                <span onClick={onClickLocation} id=\"address-search-btn\">{editUser.Location.detail ? \"주소 재검색\" : \"주소 검색\"}</span>\r\n                                            </div>\r\n                                            <span id=\"address\">{editUser.Location.detail ? editUser.Location.detail : \"동네를 설정해주세요.\"}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"완료\" />\r\n                        </form>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Profile;","import REACT from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from '../routes/Login';\r\nimport Main from '../routes/Main';\r\nimport Post from '../routes/Post';\r\nimport Posting from '../routes/Posting';\r\nimport Setting from '../routes/Setting.js';\r\nimport Profile from '../routes/Profile';\r\n\r\nconst AppRouter = ({ isLoggedin, isSetting, userObj }) => {\r\n    return (<Router>\r\n        <Switch>\r\n            {!isLoggedin ? <Route exact path=\"/\">\r\n                <Login/>\r\n            </Route> : <>\r\n                {!isSetting ?\r\n                    <Route exact path=\"/\">\r\n                        <Setting userObj={userObj}/>\r\n                    </Route>: \r\n                    <>\r\n                        <Route exact path=\"/\" >\r\n                            <Main />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile/>\r\n                        </Route>\r\n                        <Route exact path=\"/posting\">\r\n                            <Posting />\r\n                        </Route>\r\n                        <Route exact path=\"/post\">\r\n                            <Post />\r\n                        </Route>\r\n                    </>}\r\n            </>}\r\n        </Switch>\r\n    </Router>)\r\n}\r\nexport default AppRouter;","import REACT from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../styleSheets/footer.css'\r\nconst Footer=()=>{\r\n    return(    \r\n    <footer>\r\n        <div className=\"row-container\">\r\n          <div className=\"col-container footer-wrapper1\">\r\n            <img src=\"logo4.png\" width=\"50vw\" />\r\n            <span>이웃과 돕고돕는 커뮤니티 돕돕</span>\r\n            <hr />\r\n            <span>Copyright &#169; dobdob 2021</span>\r\n          </div>\r\n          <div className=\"col-container footer-wrapper2\">\r\n            <h2>CONTACT <FontAwesomeIcon icon={faPhone}/></h2>\r\n            <span>runru1030@gmail.com</span>\r\n            <span>+82. 02-xxx-xxxx</span>\r\n          </div>\r\n        </div>\r\n      </footer>);\r\n}\r\n\r\nexport default Footer;","import AppRouter from './Router';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoggedInfo, setSetting } from '../modules/user';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from './Footer'\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { userObj, isLoggedin, isSetting } = useSelector(state => ({\r\n    userObj: state.user.userObj,\r\n    isLoggedin: state.user.isLoggedin,\r\n    isSetting: state.user.isSetting\r\n  }))\r\n  const token = useState(JSON.parse(window.localStorage.getItem('token')));\r\n  const query = queryString.parse(window.location.search);\r\n\r\n  useEffect(() => {\r\n    if (query.code) {\r\n      getKakaoTokenHandler(query);\r\n    }\r\n    else {\r\n      if(userObj == null || !token ) {\r\n        dispatch(setLoggedInfo(null, false));\r\n        window.localStorage.removeItem(\"token\");\r\n      }\r\n      else {\r\n        sendJwtTokenToServer(token);\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n  const getKakaoTokenHandler = async (query) => {\r\n    const data = {\r\n      grant_type: \"authorization_code\",\r\n      client_id: process.env.REACT_APP_KAKAO_REST_KEY,\r\n      redirect_uri: \"https://tave7-dobdob.github.io/DobDob-Web/\",\r\n      code: query.code\r\n    };\r\n    const queryString = Object.keys(data)\r\n      .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\r\n      .join('&');\r\n    axios.post('https://kauth.kakao.com/oauth/token', queryString, {\r\n      headers: {\r\n        'Content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n      }\r\n    }).then((res) => {\r\n      \r\n      sendKakaoTokenToServer({\r\n        access_token: res.data.access_token,\r\n      });\r\n      window.history.replaceState({}, null, window.location.origin+ window.location.pathname + window.location.hash);\r\n    });\r\n  }\r\n  //일반 로그인\r\n  const sendKakaoTokenToServer = (token) => {\r\n    axios.post('http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/auth/kakao',{...token })\r\n      .then(res => {\r\n        if (res.status == 201 || res.status == 200) {\r\n          window.localStorage.setItem(\"token\", JSON.stringify({\r\n            access_token: res.data.jwt\r\n          }));\r\n          const user=res.data.user;\r\n          dispatch(setLoggedInfo(user, true));\r\n          if (user.nickName != \"\") {\r\n            dispatch(setSetting(true));\r\n          }\r\n          else {\r\n            dispatch(setSetting(false));\r\n          }\r\n        }\r\n        else {\r\n          window.alert(\"로그인에 실패하였습니다.\");\r\n        }\r\n      })\r\n  }\r\n  //자동로그인\r\n  const sendJwtTokenToServer = (jwtToken) => {\r\n    console.log(\"token\");\r\n    axios.post('http://ec2-3-34-137-99.ap-northeast-2.compute.amazonaws.com/auth/kakao',{\r\n      headers:{\r\n        'Authorization': jwtToken\r\n      }})\r\n      .then(res => {\r\n        \r\n    console.log(\"token\");\r\n        if ( res.status == 200) {\r\n          const user=res.data.user;\r\n          dispatch(setLoggedInfo(user, true));\r\n          if (user.nickName != \"\") {\r\n            dispatch(setSetting(true));\r\n          }\r\n          else {\r\n            dispatch(setSetting(false));\r\n          }\r\n        }\r\n        else {\r\n          window.alert(\"로그인에 실패하였습니다.\");\r\n          dispatch(setLoggedInfo(null, false));\r\n          window.localStorage.removeItem(\"token\");\r\n        }\r\n      })\r\n  }\r\n  return (<>\r\n    <AppRouter isLoggedin={isLoggedin} isSetting={isSetting} userObj={userObj} />\r\n    <Footer/>\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport user from './user'\r\nimport postInfo from './postInfo'\r\nimport profileInfo from './profileInfo'\r\nimport { persistReducer } from 'redux-persist';\t// 추가\r\nimport storage from 'redux-persist/lib/storage';\t// 추가\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\t// 추가\r\n\r\n\r\n\t\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  postInfo,\r\n  profileInfo\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\t// 추가\r\n\r\nexport default persistedReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './style.css'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport persistedReducer from './modules';\nimport { persistStore } from 'redux-persist';\t// 추가\nimport { PersistGate } from 'redux-persist/integration/react';\nimport dotenv from 'dotenv'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\ndotenv.config()\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n\n    </Provider >\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}